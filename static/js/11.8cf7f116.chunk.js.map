{"version":3,"sources":["components/Cards/InfoCard.js","components/Chart/ChartCard.js","components/Chart/ChartLegend.js","utils/demo/chartsData.js","pages/Dashboard.js","components/Typography/PageTitle.js","components/RoundIcon.js"],"names":["InfoCard","title","value","children","icon","style","background","className","Chart","ChartLegend","legends","map","legend","key","color","doughnutLegends","lineLegends","doughnutOptions","data","datasets","backgroundColor","label","labels","options","responsive","cutoutPercentage","display","lineOptions","borderColor","fill","tooltips","mode","intersect","hover","scales","x","scaleLabel","labelString","y","Dashboard","PageTitle","RoundIcon","MoneyIcon","iconColorClass","bgColorClass","ChartCard","Icon","cls","classNames"],"mappings":"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","file":"static/js/11.8cf7f116.chunk.js","sourcesContent":["import React from 'react'\nimport { Card, CardBody } from '@windmill/react-ui'\n\nfunction InfoCard ({ title, value, children: icon }) {\n  return (\n    <Card style={{ background: 'linear-gradient(to right,#9A47B9, #4D2D9F)' }}>\n      <CardBody className='flex items-center '>\n        {icon}\n        <div>\n          <p className='mb-2 text-sm font-medium text-gray-600 dark:text-white'>\n            {title}\n          </p>\n          <p className='text-lg font-semibold text-gray-700 dark:text-white'>\n            {value}\n          </p>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","import React from 'react'\n\nfunction Chart ({ children, title }) {\n  return (\n    <div className='min-w-0 p-4 bg-white rounded-lg shadow-xs dark:bg-primary2'>\n      <p className='mb-4 font-semibold text-gray-800 dark:text-white'>\n        {title}\n      </p>\n      {children}\n    </div>\n  )\n}\n\nexport default Chart\n","import React from 'react'\n\nfunction ChartLegend ({ legends }) {\n  return (\n    <div className='flex justify-center mt-4 space-x-3 text-sm text-gray-600 dark:text-white'>\n      {legends.map(legend => (\n        <div className='flex items-center' key={legend.title}>\n          <span\n            className={`inline-block w-3 h-3 mr-1 ${legend.color} rounded-full`}\n          ></span>\n          <span>{legend.title}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ChartLegend\n","export const doughnutLegends = [\n  { title: 'SCRT', color: 'bg-blue-500' },\n  { title: 'OSMO', color: 'bg-teal-600' },\n  { title: 'SHD', color: 'bg-purple-600' }\n]\n\nexport const lineLegends = [\n  { title: 'Organic', color: 'bg-teal-600' },\n  { title: 'Paid', color: 'bg-purple-600' }\n]\n\nexport const barLegends = [\n  { title: 'Shoes', color: 'bg-teal-600' },\n  { title: 'Bags', color: 'bg-purple-600' }\n]\n\nexport const doughnutOptions = {\n  data: {\n    datasets: [\n      {\n        data: [33, 33, 33],\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: ['#0694a2', '#1c64f2', '#7e3af2'],\n        label: 'Dataset 1'\n      }\n    ],\n    labels: ['Shoes', 'Shirts', 'Bags']\n  },\n  options: {\n    responsive: true,\n    cutoutPercentage: 80\n  },\n  legend: {\n    display: false\n  }\n}\n\nexport const lineOptions = {\n  data: {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        label: 'Organic',\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: '#0694a2',\n        borderColor: '#0694a2',\n        data: [43, 48, 40, 54, 67, 73, 70],\n        fill: false\n      },\n      {\n        label: 'Paid',\n        fill: false,\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: '#7e3af2',\n        borderColor: '#7e3af2',\n        data: [24, 50, 64, 74, 52, 51, 65]\n      }\n    ]\n  },\n  options: {\n    responsive: true,\n    tooltips: {\n      mode: 'index',\n      intersect: false\n    },\n    hover: {\n      mode: 'nearest',\n      intersect: true\n    },\n    scales: {\n      x: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: 'Month'\n        }\n      },\n      y: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: 'Value'\n        }\n      }\n    }\n  },\n  legend: {\n    display: false\n  }\n}\n\nexport const barOptions = {\n  data: {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        label: 'Shoes',\n        backgroundColor: '#0694a2',\n        // borderColor: window.chartColors.red,\n        borderWidth: 1,\n        data: [-3, 14, 52, 74, 33, 90, 70]\n      },\n      {\n        label: 'Bags',\n        backgroundColor: '#7e3af2',\n        // borderColor: window.chartColors.blue,\n        borderWidth: 1,\n        data: [66, 33, 43, 12, 54, 62, 84]\n      }\n    ]\n  },\n  options: {\n    responsive: true\n  },\n  legend: {\n    display: false\n  }\n}\n","import React from \"react\";\n\nimport InfoCard from \"../components/Cards/InfoCard\";\nimport ChartCard from \"../components/Chart/ChartCard\";\nimport { Doughnut, Line } from \"react-chartjs-2\";\nimport ChartLegend from \"../components/Chart/ChartLegend\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { MoneyIcon } from \"../icons\";\nimport RoundIcon from \"../components/RoundIcon\";\n\nimport {\n  doughnutOptions,\n  lineOptions,\n  doughnutLegends,\n  lineLegends,\n} from \"../utils/demo/chartsData\";\n\nfunction Dashboard() {\n  return (\n    <>\n      <PageTitle>Dashboard</PageTitle>\n\n      {/* <!-- Cards --> */}\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\">\n        <InfoCard title=\"Total Delegated($)\" value=\"$1 million\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-orange-500 dark:text-orange-100\"\n            bgColorClass=\"bg-orange-100 dark:bg-orange-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n        <InfoCard title=\"Pools\" value=\"3\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-green-500 dark:text-green-100\"\n            bgColorClass=\"bg-green-100 dark:bg-green-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n        <InfoCard title=\"Total Prizes till this date \" value=\"$5 million\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-blue-500 dark:text-blue-100\"\n            bgColorClass=\"bg-blue-100 dark:bg-blue-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Total Prizes this week\" value=\"$50,000\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-blue-500 dark:text-blue-100\"\n            bgColorClass=\"bg-purple-100 dark:bg-purple-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n      </div>\n\n      {/* <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Client</TableCell>\n              <TableCell>Amount</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {data.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className='flex items-center text-sm'>\n                    <Avatar\n                      className='hidden mr-3 md:block'\n                      src={user.avatar}\n                      alt='User image'\n                    />\n                    <div>\n                      <p className='font-semibold'>{user.name}</p>\n                      <p className='text-xs text-gray-600 dark:text-gray-400'>\n                        {user.job}\n                      </p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className='text-sm'>$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <Badge type={user.status}>{user.status}</Badge>\n                </TableCell>\n                <TableCell>\n                  <span className='text-sm'>\n                    {new Date(user.date).toLocaleDateString()}\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label='Table navigation'\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer> */}\n\n      <PageTitle>Charts</PageTitle>\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2\">\n        <ChartCard title=\"Pool shares\">\n          <Doughnut {...doughnutOptions} />\n          <ChartLegend legends={doughnutLegends} />\n        </ChartCard>\n\n        <ChartCard title=\"Traffic\">\n          <Line {...lineOptions} />\n          <ChartLegend legends={lineLegends} />\n        </ChartCard>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon ({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className\n}) {\n  const baseStyle = 'p-3 rounded-full'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className='w-5 h-5' />\n    </div>\n  )\n}\n\nexport default RoundIcon\n"],"sourceRoot":""}