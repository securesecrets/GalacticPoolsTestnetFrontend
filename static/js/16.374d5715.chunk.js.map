{"version":3,"sources":["modals/DepositModal.js","assets/img/scrt_logo.png","components/CryptoComponents/client.js","utils/demo/notifications.js"],"names":["customStyles","content","top","left","right","bottom","marginRight","width","height","transform","backgroundColor","borderRadius","DepositModall","props","useState","balance","setBalance","inputBalance","setinputBalance","isDepositButtonEnabled","SetIsDepositButtonEnabled","isDepositing","setIsDepositing","secretjs","address","wallet","setWallet","a","setupKeplr","query","bank","denom","amount","String","process","tx","compute","executeContract","sender","contractAddress","codeHash","msg","deposit","sentFunds","gasLimit","console","log","jsonLog","Notifications","transactionHash","rawLog","am","clearfields","onInputchange","e","target","value","callback","hide","useEffect","setupKeplrfun","fetchBalance","DepositModal","isShowing","ReactDOM","createPortal","Fragment","isOpen","onRequestClose","contentLabel","style","ariaHideApp","className","type","aria-label","onClick","src","logo","alt","min","placeholder","placeholder-default","name","onChange","toFixed","disabled","document","body","module","exports","sleep","number","Promise","resolve","setTimeout","SECRET_REST_API","SECRET_CHAIN_ID","window","keplr","getEnigmaUtils","getOfflineSignerOnlyAmino","enable","keplrOfflineSigner","getAccounts","myAddress","grpcWebUrl","SecretNetworkClient","create","chainId","walletAddress","encryptionUtils","obj","dotenv","path","toastMixin","Swal","mixin","toast","icon","title","position","showConfirmButton","timer","timerProgressBar","showCloseButton","didOpen","addEventListener","stopTimer","resumeTimer","message","fire","text","color","background"],"mappings":"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","file":"static/js/16.374d5715.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport { Button } from \"@windmill/react-ui\";\nimport logo from \"../assets/img/scrt_logo.png\"; // with import\nimport { setupKeplr } from \"../components/CryptoComponents/client\";\nimport ReactDOM from \"react-dom\";\nimport Notifications from \"../utils/demo/notifications.js\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    width: \"35%\",\n    height: \"35%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"#0f4d4a\",\n    borderRadius: \"1%\",\n    // padding: \"2%\",\n  },\n};\n\nfunction DepositModall(props) {\n  //fetch the balance\n  //create a state where you fetch secretjs once + the address\n  //\n\n  let [balance, setBalance] = useState(null);\n  let [inputBalance, setinputBalance] = useState(0);\n  let [isDepositButtonEnabled, SetIsDepositButtonEnabled] = useState(false);\n  let [isDepositing, setIsDepositing] = useState(false);\n\n  let [wallet, setWallet] = useState({ secretjs: null, address: null });\n\n  async function setupKeplrfun() {\n    const { secretjs, address } = await setupKeplr();\n    setWallet({ secretjs, address });\n  }\n\n  async function fetchBalance() {\n    // To create a readonly secret.js client, just pass in a gRPC-web endpoint\n    const { secretjs, address } = wallet;\n\n    const {\n      balance: { amount },\n    } = await secretjs.query.bank.balance({\n      address: address,\n      denom: \"uscrt\",\n    });\n    setBalance(amount);\n  }\n\n  async function deposit() {\n    setIsDepositing(true);\n    // To create a readonly secret.js client, just pass in a gRPC-web endpoint\n    const { secretjs, address } = wallet;\n\n    let amount = String(inputBalance * 1e6);\n    let contractAddress = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n    let codeHash = process.env.REACT_APP_POOL_CONTRACT_HASH;\n    try {\n      let tx = await secretjs.tx.compute.executeContract(\n        {\n          sender: address,\n          contractAddress: contractAddress,\n          codeHash: codeHash, // optional but way faster\n          msg: {\n            deposit: {},\n          },\n          sentFunds: [{ amount: amount, denom: \"uscrt\" }], // optional{}\n        },\n        {\n          gasLimit: 240297,\n        }\n      );\n      console.log(tx);\n\n      if (tx.jsonLog) {\n        Notifications(\n          \"success\",\n          \"Transaction sent!\",\n          `Successfully deposited: ${inputBalance} SCRT \\n \n        Txhash: ${tx.transactionHash}`\n        );\n      } else {\n        Notifications(\"error\", \"ERROR\", tx.rawLog);\n      }\n    } catch (err) {\n      Notifications(\"error\", \"ERROR\", err);\n    }\n\n    const {\n      balance: { amount: am },\n    } = await secretjs.query.bank.balance({\n      address: address,\n      denom: \"uscrt\",\n    });\n    setBalance(am);\n\n    // } catch (e) {\n    //   Notifications(\"error\", \"ERROR\", e);\n    // }\n\n    await clearfields();\n  }\n\n  useEffect(() => {\n    if (wallet.secretjs == null || wallet.address == null) {\n      setupKeplrfun();\n    }\n\n    if (wallet.secretjs != null || wallet.address != null) {\n      fetchBalance();\n    }\n\n    if (inputBalance != 0) {\n      SetIsDepositButtonEnabled(true);\n    } else {\n      SetIsDepositButtonEnabled(false);\n    }\n\n    if (inputBalance * 1e6 > balance) {\n      SetIsDepositButtonEnabled(false);\n    }\n  }, [wallet, inputBalance]);\n\n  async function onInputchange(e) {\n    setinputBalance(e.target.value);\n  }\n\n  async function clearfields() {\n    await props.callback();\n    props.hide();\n    setinputBalance(0);\n    setIsDepositing(false);\n  }\n\n  const DepositModal = ({ isShowing, hide }) =>\n    isShowing\n      ? ReactDOM.createPortal(\n          <React.Fragment>\n            <Modal\n              isOpen={isShowing}\n              onRequestClose={clearfields}\n              contentLabel=\"Example Modal\"\n              style={customStyles}\n              ariaHideApp={false}\n            >\n              <div className=\"flex flex-col h-full justify-between\">\n                <div className=\"flex flex-row justify-between items-center\">\n                  <div className=\"\">\n                    <span className=\"deposit-modal-heading\">Deposit</span>\n                  </div>\n                  <div className=\"btn-close white\">\n                    <button\n                      type=\"Button\"\n                      className=\"btn-close white\"\n                      aria-label=\"Close\"\n                      onClick={clearfields}\n                    ></button>\n                  </div>\n                </div>\n\n                <div className=\"flex flex-row  justify-between items-center mt-4\">\n                  <div className=\"\">\n                    <span className=\"deposit-modal-available text-m\">\n                      Available\n                    </span>\n                  </div>\n                  <div className=\"flex flex-row \">\n                    <div className=\"d-flex align-items-center m-1\">\n                      <img\n                        src={logo}\n                        alt=\"LOGO Image\"\n                        className=\"img-fluid mini-logo-size\"\n                      />\n                    </div>\n                    <div className=\"ps-1 pool_past_prizes m-1\">\n                      {balance / 1e6} SCRT\n                    </div>\n                  </div>\n                </div>\n\n                <div\n                  className=\"flex flex-row  justify-between items-center  p-2\n              mt-2 deposit-modal-deposit-field deposit-modal-deposit-field-shape \"\n                >\n                  <div>\n                    <input\n                      className=\"deposit-modal-deposit-field text-white w-full\"\n                      type=\"number\"\n                      min=\"0\"\n                      placeholder=\"0.00\"\n                      placeholder-default=\"white\"\n                      name=\"inputBalance\"\n                      value={inputBalance}\n                      onChange={onInputchange}\n                    />\n                  </div>\n                  <div className=\"deposit-modal-deposit-field-tokens\">SCRT</div>\n                </div>\n                <div className=\"flex flex-row mt-4 items-center justify-between text-white \">\n                  <div\n                    className=\"deposit-modal-amount-percentage px-5 \"\n                    onClick={() => {\n                      setinputBalance(((balance / 1e6) * 0.25).toFixed(2));\n                    }}\n                  >\n                    <button>25%</button>\n                  </div>\n                  <div\n                    className=\"deposit-modal-amount-percentage  px-5\"\n                    onClick={() => {\n                      setinputBalance(((balance / 1e6) * 0.5).toFixed(2));\n                    }}\n                  >\n                    <button>50%</button>\n                  </div>\n                  <div\n                    className=\"deposit-modal-amount-percentage px-5 \"\n                    onClick={() => {\n                      setinputBalance(((balance / 1e6) * 0.75).toFixed(2));\n                    }}\n                  >\n                    <button>75%</button>\n                  </div>\n                  <div\n                    className=\"deposit-modal-amount-percentage  px-5\"\n                    onClick={() => {\n                      setinputBalance(balance / 1e6);\n                    }}\n                  >\n                    <button>100%</button>\n                  </div>\n                </div>\n                <div className=\"flex flex-row mt-4 items-center justify-between \">\n                  <Button\n                    className=\"btn account_deposit_button text-white self-center\"\n                    onClick={() => deposit()}\n                    disabled={!isDepositButtonEnabled}\n                  >\n                    {isDepositing ? (\n                      <div className=\"loader-1 center\">\n                        <span></span>\n                      </div>\n                    ) : (\n                      <div>Deposit</div>\n                    )}\n                  </Button>\n                </div>\n              </div>\n            </Modal>\n          </React.Fragment>,\n          document.body\n        )\n      : null;\n  return <DepositModal isShowing={props.isShowing} hide={props.hide} />;\n}\n\nexport default DepositModall;\n","module.exports = __webpack_public_path__ + \"static/media/scrt_logo.0fe47b33.png\";","import { SecretNetworkClient } from \"secretjs\";\nimport * as dotenv from \"dotenv\"; // see https://github.com/motdotla/dotenv#how-do-i-use-dotenv-with-import\ndotenv.config({ path: \"../../../.env\" });\n\nexport async function setupKeplr() {\n  const sleep = (number) =>\n    new Promise((resolve) => setTimeout(resolve, number));\n  const SECRET_REST_API = process.env.REACT_APP_SECRET_REST_URL;\n\n  const SECRET_CHAIN_ID = process.env.REACT_APP_SECRET_CHAIN_ID;\n\n  while (\n    !window.keplr ||\n    !window.getEnigmaUtils ||\n    !window.getOfflineSignerOnlyAmino\n  ) {\n    await sleep(50);\n  }\n\n  await window.keplr.enable(SECRET_CHAIN_ID);\n  const keplrOfflineSigner =\n    window.keplr.getOfflineSignerOnlyAmino(SECRET_CHAIN_ID);\n\n  const [{ address: myAddress }] = await keplrOfflineSigner.getAccounts();\n\n  const grpcWebUrl = SECRET_REST_API;\n\n  const secretjs = await SecretNetworkClient.create({\n    grpcWebUrl,\n    chainId: SECRET_CHAIN_ID,\n    wallet: keplrOfflineSigner,\n    walletAddress: myAddress,\n    encryptionUtils: window.keplr.getEnigmaUtils(SECRET_CHAIN_ID),\n  });\n\n  let obj = {\n    address: myAddress,\n    secretjs,\n  };\n\n  return obj;\n}\n","import Swal from \"sweetalert2\";\n\nvar toastMixin = Swal.mixin({\n  toast: true,\n  icon: \"success\",\n  title: \"General Title\",\n  position: \"top-right\",\n  showConfirmButton: false,\n  timer: 15000,\n  timerProgressBar: true,\n  showCloseButton: true,\n  didOpen: (toast) => {\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n  },\n});\n\nexport default async function Notifications(type, title, message) {\n  let themeColor = \"#136762\";\n  let fontColor = \"#ffffff\";\n\n  toastMixin.fire({\n    title: title,\n    text: message,\n    icon: type,\n    color: fontColor,\n    background: themeColor,\n  });\n}\n"],"sourceRoot":""}