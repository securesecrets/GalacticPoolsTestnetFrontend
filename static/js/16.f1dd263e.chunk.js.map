{"version":3,"sources":["modals/SponsorModal.js"],"names":["customStyles","content","top","left","right","bottom","marginRight","width","height","transform","backgroundColor","borderRadius","DepositModal","isShowing","hide","clearfields","balance","inputBalance","onInputchangeBalance","setinputBalance","Label","InputText","isSponsoring","isSponsorButtonEnabled","sponsor","onInputchangeMessage","inputMessage","onInputchangeTitle","inputTitle","ReactDOM","createPortal","Fragment","isOpen","onRequestClose","contentLabel","style","ariaHideApp","className","type","aria-label","onClick","src","logo","alt","min","placeholder","placeholder-default","name","value","onChange","toFixed","text","disabled","document","body","SponsorModal","props","setBalance","useState","setinputTitle","setinputMessage","SetIsSponsorButtonEnabled","setIsSponsoring","wallet","setWallet","secretjs","address","async","fetchBalance","amount","query","bank","denom","callback","undefined","useEffect","setupKeplr","setupKeplrfun","useCallback","e","target","String","message","title","tx","compute","executeContract","sender","contractAddress","process","codeHash","msg","sentFunds","gasLimit","jsonLog","Notifications","transactionHash","rawLog","err","am"],"mappings":"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","file":"static/js/16.f1dd263e.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Modal from \"react-modal\";\nimport { Button } from \"@windmill/react-ui\";\nimport logo from \"../assets/img/scrt_logo.png\"; // with import\nimport { setupKeplr } from \"../components/CryptoComponents/client\";\nimport ReactDOM from \"react-dom\";\nimport Notifications from \"../utils/demo/notifications.js\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    width: \"35%\",\n    height: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"#0f4d4a\",\n    borderRadius: \"1%\",\n    // padding: \"2%\",\n  },\n};\n\nconst DepositModal = ({\n  isShowing,\n  hide,\n  clearfields,\n  balance,\n  inputBalance,\n  onInputchangeBalance,\n  setinputBalance,\n  Label: InputText,\n\n  isSponsoring,\n  isSponsorButtonEnabled,\n  sponsor,\n  onInputchangeMessage,\n  inputMessage,\n  onInputchangeTitle,\n  inputTitle,\n}) =>\n  isShowing\n    ? ReactDOM.createPortal(\n        <React.Fragment>\n          <Modal\n            isOpen={isShowing}\n            onRequestClose={clearfields}\n            contentLabel=\"Example Modal\"\n            style={customStyles}\n            ariaHideApp={false}\n          >\n            <div className=\"flex flex-col h-full justify-between\">\n              <div className=\"flex flex-row justify-between items-center\">\n                <div className=\"\">\n                  <span className=\"deposit-modal-heading\">Sponsor</span>\n                </div>\n                <div className=\"btn-close white\">\n                  <button\n                    type=\"Button\"\n                    className=\"btn-close white\"\n                    aria-label=\"Close\"\n                    onClick={clearfields}\n                  ></button>\n                </div>\n              </div>\n\n              <div className=\"flex flex-row  justify-between items-center mt-4\">\n                <div className=\"\">\n                  <span className=\"deposit-modal-available text-m\">\n                    Available\n                  </span>\n                </div>\n                <div className=\"flex flex-row \">\n                  <div className=\"d-flex align-items-center m-1\">\n                    <img\n                      src={logo}\n                      alt=\"LOGO \"\n                      className=\"img-fluid mini-logo-size\"\n                    />\n                  </div>\n                  <div className=\"ps-1 pool_past_prizes m-1\">\n                    {balance / 1e6} SCRT\n                  </div>\n                </div>\n              </div>\n\n              <div\n                className=\"flex flex-row  justify-between items-center  p-2\n              mt-2 deposit-modal-deposit-field deposit-modal-deposit-field-shape \"\n              >\n                <div>\n                  <input\n                    className=\"deposit-modal-deposit-field text-white w-full\"\n                    type=\"number\"\n                    min=\"0\"\n                    placeholder=\"0.00\"\n                    placeholder-default=\"white\"\n                    name=\"inputBalance\"\n                    value={inputBalance}\n                    onChange={onInputchangeBalance}\n                  />\n                </div>\n                <div className=\"deposit-modal-deposit-field-tokens\">SCRT</div>\n              </div>\n              <div className=\"flex flex-row mt-4 items-center justify-between text-white \">\n                <div\n                  className=\"deposit-modal-amount-percentage px-5 \"\n                  onClick={() => {\n                    setinputBalance(((balance / 1e6) * 0.25).toFixed(2));\n                  }}\n                >\n                  <button>25%</button>\n                </div>\n                <div\n                  className=\"deposit-modal-amount-percentage  px-5\"\n                  onClick={() => {\n                    setinputBalance(((balance / 1e6) * 0.5).toFixed(2));\n                  }}\n                >\n                  <button>50%</button>\n                </div>\n                <div\n                  className=\"deposit-modal-amount-percentage px-5 \"\n                  onClick={() => {\n                    setinputBalance(((balance / 1e6) * 0.75).toFixed(2));\n                  }}\n                >\n                  <button>75%</button>\n                </div>\n                <div\n                  className=\"deposit-modal-amount-percentage  px-5\"\n                  onClick={() => {\n                    setinputBalance(balance / 1e6);\n                  }}\n                >\n                  <button>100%</button>\n                </div>\n              </div>\n              <div className=\"flex flex-row  justify-between items-center mt-4\">\n                <div className=\"\">\n                  <span className=\"deposit-modal-available text-m\">\n                    Sponsorship Title\n                  </span>\n                </div>\n                <div className=\"flex flex-row \">\n                  <div className=\"d-flex align-items-center m-1\">\n                    <form>\n                      <InputText\n                        text={inputTitle}\n                        onChange={onInputchangeTitle}\n                      />\n                    </form>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex flex-row  justify-between items-center mt-4\">\n                <div className=\"\">\n                  <span className=\"deposit-modal-available text-m\">\n                    Sponsorship Message\n                  </span>\n                </div>\n                <div className=\"flex flex-row \">\n                  <div className=\"d-flex align-items-center m-1\">\n                    <InputText\n                      text={inputMessage}\n                      onChange={onInputchangeMessage}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex flex-row mt-4 items-center justify-between \">\n                <Button\n                  className=\"btn account_deposit_button text-white self-center\"\n                  onClick={() => sponsor()}\n                  disabled={!isSponsorButtonEnabled}\n                >\n                  {isSponsoring ? (\n                    <div className=\"loader-1 center\">\n                      <span></span>\n                    </div>\n                  ) : (\n                    <div>Sponsor</div>\n                  )}\n                </Button>\n              </div>\n            </div>\n          </Modal>\n        </React.Fragment>,\n        document.body\n      )\n    : null;\n\nfunction SponsorModal(props) {\n  //fetch the balance\n  //create a state where you fetch secretjs once + the address\n  //\n\n  let [balance, setBalance] = useState(null);\n  let [inputBalance, setinputBalance] = useState(0);\n  let [inputTitle, setinputTitle] = useState(\"\");\n  let [inputMessage, setinputMessage] = useState(\"\");\n\n  let [isSponsorButtonEnabled, SetIsSponsorButtonEnabled] = useState(false);\n  let [isSponsoring, setIsSponsoring] = useState(false);\n\n  let [wallet, setWallet] = useState({ secretjs: null, address: null });\n\n  async function setupKeplrfun() {\n    const { secretjs, address } = await setupKeplr();\n    setWallet({ secretjs, address });\n  }\n\n  async function fetchBalance() {\n    // To create a readonly secret.js client, just pass in a gRPC-web endpoint\n    const { secretjs, address } = wallet;\n\n    const {\n      balance: { amount },\n    } = await secretjs.query.bank.balance({\n      address: address,\n      denom: \"uscrt\",\n    });\n    setBalance(amount);\n  }\n\n  async function sponsor() {\n    setIsSponsoring(true);\n    // To create a readonly secret.js client, just pass in a gRPC-web endpoint\n    const { secretjs, address } = wallet;\n\n    let amount = String(inputBalance * 1e6);\n    let contractAddress = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n    let codeHash = process.env.REACT_APP_POOL_CONTRACT_HASH;\n    try {\n      let message = {\n        sponsor: {},\n      };\n\n      if (inputTitle !== \"\" || inputMessage !== \"\") {\n        message = {\n          sponsor: {\n            title: inputTitle,\n            message: inputMessage,\n          },\n        };\n      }\n      let tx = await secretjs.tx.compute.executeContract(\n        {\n          sender: address,\n          contractAddress: contractAddress,\n          codeHash: codeHash, // optional but way faster\n          msg: {\n            sponsor: {\n              title: inputTitle,\n              message: inputMessage,\n            },\n          },\n          sentFunds: [{ amount: amount, denom: \"uscrt\" }], // optional{}\n        },\n        {\n          gasLimit: 240297,\n        }\n      );\n\n      if (tx.jsonLog) {\n        Notifications(\n          \"success\",\n          \"Transaction sent!\",\n          `Successfully sponsored: ${inputBalance} SCRT \\n \n        Txhash: ${tx.transactionHash}`\n        );\n      } else {\n        Notifications(\"error\", \"ERROR\", tx.rawLog);\n      }\n    } catch (err) {\n      Notifications(\"error\", \"ERROR\", err);\n    }\n\n    const {\n      balance: { amount: am },\n    } = await secretjs.query.bank.balance({\n      address: address,\n      denom: \"uscrt\",\n    });\n    setBalance(am);\n\n    // } catch (e) {\n    //   Notifications(\"error\", \"ERROR\", e);\n    // }\n\n    await clearfields();\n  }\n\n  useEffect(() => {\n    if (wallet.secretjs == null || wallet.address == null) {\n      setupKeplrfun();\n    }\n\n    if (wallet.secretjs != null || wallet.address != null) {\n      fetchBalance();\n    }\n\n    if (inputBalance !== 0) {\n      SetIsSponsorButtonEnabled(true);\n    } else {\n      SetIsSponsorButtonEnabled(false);\n    }\n\n    if (inputBalance * 1e6 > balance) {\n      SetIsSponsorButtonEnabled(false);\n    }\n  }, [wallet, inputBalance, balance, fetchBalance]);\n\n  async function onInputchangeBalance(e) {\n    setinputBalance(e.target.value);\n  }\n\n  async function onInputchangeTitle(e) {\n    setinputTitle(e.target.value);\n  }\n\n  async function onInputchangeMessage(e) {\n    setinputMessage(e.target.value);\n  }\n\n  async function clearfields() {\n    await props.callback();\n    props.hide();\n    setinputBalance(0);\n    setinputTitle(undefined);\n    setinputMessage(undefined);\n\n    setIsSponsoring(false);\n  }\n\n  const Label = useCallback(\n    ({ text, onChange }) => (\n      <input\n        className=\"deposit-modal-deposit-field text-white w-full\"\n        type=\"text\"\n        placeholder=\"Optional\"\n        placeholder-default=\"white\"\n        value={text}\n        onChange={(e) => onChange(e)}\n      />\n    ),\n    []\n  );\n\n  return (\n    <DepositModal\n      isShowing={props.isShowing}\n      hide={props.hide}\n      clearfields={clearfields}\n      balance={balance}\n      inputBalance={inputBalance}\n      onInputchangeBalance={onInputchangeBalance}\n      setinputBalance={setinputBalance}\n      Label={Label}\n      isSponsoring={isSponsoring}\n      isSponsorButtonEnabled={isSponsorButtonEnabled}\n      sponsor={sponsor}\n      onInputchangeMessage={onInputchangeMessage}\n      inputMessage={inputMessage}\n      onInputchangeTitle={onInputchangeTitle}\n      inputTitle={inputTitle}\n    />\n  );\n}\n\nexport default SponsorModal;\n"],"sourceRoot":""}