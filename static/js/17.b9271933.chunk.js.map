{"version":3,"sources":["modals/UnbondingModal.js"],"names":["customStyles","content","top","left","right","bottom","marginRight","width","height","transform","backgroundColor","borderRadius","padding","UnbondingModal","props","inputBalance","setinputBalance","useState","isUnbondButtonEnabled","SetIsUnbondButtonEnabled","isUnbonding","setIsUnbonding","wallet","setWallet","secretjs","address","async","onInputchange","e","target","value","clearfields","callback","hide","useEffect","setupKeplr","setupKeplrfun","delegated","UM","isShowing","type","ReactDOM","createPortal","Fragment","isOpen","onRequestClose","contentLabel","style","ariaHideApp","className","aria-label","onClick","src","logo","alt","min","placeholder","placeholder-default","name","onChange","toFixed","amount","String","parseInt","message_type","request_withdraw","sponsor_request_withdraw","tx","compute","executeContract","sender","contractAddress","process","codeHash","msg","gasLimit","Notifications","transactionHash","unbond","disabled","document","body"],"mappings":"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","file":"static/js/17.b9271933.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport { Button } from \"@windmill/react-ui\";\nimport logo from \"../assets/img/scrt_logo.png\"; // with import\nimport { setupKeplr } from \"../components/CryptoComponents/client\";\nimport ReactDOM from \"react-dom\";\nimport Notifications from \"../utils/demo/notifications.js\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    width: \"40%\",\n    height: \"60%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"#0f4d4a\",\n    borderRadius: \"1%\",\n    padding: \"2%\",\n  },\n};\n\nfunction UnbondingModal(props) {\n  //fetch the balance\n  //create a state where you fetch secretjs once + the address\n  //\n\n  let [inputBalance, setinputBalance] = useState(0);\n  let [isUnbondButtonEnabled, SetIsUnbondButtonEnabled] = useState(false);\n  let [isUnbonding, setIsUnbonding] = useState(false);\n\n  let [wallet, setWallet] = useState({ secretjs: null, address: null });\n\n  async function setupKeplrfun() {\n    const { secretjs, address } = await setupKeplr();\n    setWallet({ secretjs, address });\n  }\n\n  async function unbond(type) {\n    setIsUnbonding(true);\n    // To create a readonly secret.js client, just pass in a gRPC-web endpoint\n    const { secretjs, address } = wallet;\n\n    let amount = String(parseInt(inputBalance * 1e6));\n    let contractAddress = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n    let codeHash = process.env.REACT_APP_POOL_CONTRACT_HASH;\n\n    try {\n      let message_type;\n      if (type === \"user\") {\n        message_type = {\n          request_withdraw: { amount: amount },\n        };\n      }\n      if (type === \"sponsor\") {\n        message_type = {\n          sponsor_request_withdraw: { amount: amount },\n        };\n      }\n      const tx = await secretjs.tx.compute.executeContract(\n        {\n          sender: address,\n          contractAddress: contractAddress,\n          codeHash: codeHash, // optional but way faster\n          msg: message_type,\n        },\n        {\n          gasLimit: 240297,\n        }\n      );\n\n      // fetchDelegated();\n      Notifications(\n        \"success\",\n        \"Transaction sent!\",\n        `Successfully Unbonded: ${inputBalance} SCRT \\n \n        Txhash: ${tx.transactionHash}`\n      );\n    } catch (e) {\n      Notifications(\"error\", \"ERROR\", e);\n    }\n\n    await clearfields();\n  }\n\n  useEffect(() => {\n    if (wallet.secretjs == null || wallet.address == null) {\n      setupKeplrfun();\n    }\n\n    if (inputBalance != 0) {\n      SetIsUnbondButtonEnabled(true);\n    } else {\n      SetIsUnbondButtonEnabled(false);\n    }\n\n    if (inputBalance * 1e6 > props.delegated) {\n      SetIsUnbondButtonEnabled(false);\n    }\n  }, [wallet, inputBalance, props.delegated]);\n\n  async function onInputchange(e) {\n    setinputBalance(e.target.value);\n  }\n\n  async function clearfields() {\n    await props.callback();\n    props.hide();\n    setinputBalance(0);\n    setIsUnbonding(false);\n  }\n\n  const UM = ({ isShowing, hide, type }) =>\n    isShowing\n      ? ReactDOM.createPortal(\n          <React.Fragment>\n            <Modal\n              isOpen={isShowing}\n              onRequestClose={hide}\n              contentLabel=\"Example Modal\"\n              style={customStyles}\n              ariaHideApp={false}\n            >\n              <div className=\"flex flex-col h-full justify-between\">\n                <div>\n                  <div className=\"flex flex-row justify-between items-center\">\n                    <div className=\"\">\n                      <span className=\"deposit-modal-heading\">Unbond</span>\n                    </div>\n                    <div className=\"btn-close white\">\n                      <button\n                        type=\"Button\"\n                        className=\"btn-close white\"\n                        aria-label=\"Close\"\n                        onClick={clearfields}\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"flex flex-row justify-between items-center   text-white font-light\">\n                  <span className=\"text-white font-light\">\n                    This will remove your SCRT tokens from the rewards contract.\n                    You will have to withdraw your SCRT to see it in your wallet\n                  </span>\n                </div>\n\n                <div className=\"flex flex-row items-center   text-white p-4 border mt-4\">\n                  <div className=\"flex flex-col d mr-4\">\n                    <span className=\"deposit-modal-heading\">&#9888;</span>\n                  </div>\n                  <div className=\"\">\n                    <div className=\"ul\">\n                      Once the unbonding period begins you will:\n                      <div className=\"li\">\n                        - not be able to cancel the unbonding\n                      </div>\n                      <div className=\"li\">\n                        - need to wait 21 days for the amount to be liquid\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"flex flex-row  justify-between items-center mt-4\">\n                  <div className=\"\">\n                    <span className=\"deposit-modal-available text-m\">\n                      Available\n                    </span>\n                  </div>\n                  <div className=\"flex flex-row \">\n                    <div className=\"d-flex align-items-center m-1\">\n                      <img\n                        src={logo}\n                        alt=\"LOGO Image\"\n                        className=\"img-fluid mini-logo-size\"\n                      />\n                    </div>\n                    <div className=\"ps-1 pool_past_prizes m-1\">\n                      {props.delegated / 1e6} SCRT\n                    </div>\n                  </div>\n                </div>\n\n                <div\n                  className=\"flex flex-row  justify-between items-center  p-2\n              mt-2 deposit-modal-deposit-field deposit-modal-deposit-field-shape \"\n                >\n                  <div>\n                    <input\n                      className=\"deposit-modal-deposit-field text-white w-full\"\n                      type=\"number\"\n                      min=\"0\"\n                      placeholder=\"0.00\"\n                      placeholder-default=\"white\"\n                      name=\"inputBalance\"\n                      value={inputBalance}\n                      onChange={onInputchange}\n                    />\n                  </div>\n                  <div className=\"deposit-modal-deposit-field-tokens\">SCRT</div>\n                </div>\n                <div className=\"flex flex-row mt-4 items-center justify-between text-white \">\n                  <div\n                    className=\"deposit-modal-amount-percentage px-5 \"\n                    onClick={() => {\n                      setinputBalance(\n                        ((props.delegated / 1e6) * 0.25).toFixed(2)\n                      );\n                    }}\n                  >\n                    <button>25%</button>\n                  </div>\n                  <div\n                    className=\"deposit-modal-amount-percentage  px-5\"\n                    onClick={() => {\n                      setinputBalance(\n                        ((props.delegated / 1e6) * 0.5).toFixed(2)\n                      );\n                    }}\n                  >\n                    <button>50%</button>\n                  </div>\n                  <div\n                    className=\"deposit-modal-amount-percentage px-5 \"\n                    onClick={() => {\n                      setinputBalance(\n                        ((props.delegated / 1e6) * 0.75).toFixed(2)\n                      );\n                    }}\n                  >\n                    <button>75%</button>\n                  </div>\n                  <div\n                    className=\"deposit-modal-amount-percentage  px-5\"\n                    onClick={() => {\n                      setinputBalance((props.delegated / 1e6).toFixed(6));\n                    }}\n                  >\n                    <button>100%</button>\n                  </div>\n                </div>\n                <div className=\"btn    \">\n                  <Button\n                    className=\"btn account_deposit_button text-white self-center\"\n                    onClick={() => unbond(type)}\n                    disabled={!isUnbondButtonEnabled}\n                  >\n                    {isUnbonding ? (\n                      <div className=\"loader-1 center\">\n                        <span>.</span>\n                      </div>\n                    ) : (\n                      <div>Unbond</div>\n                    )}\n                  </Button>\n                </div>\n              </div>\n            </Modal>\n          </React.Fragment>,\n          document.body\n        )\n      : null;\n  return <UM isShowing={props.isShowing} hide={props.hide} type={props.type} />;\n}\n\nexport default UnbondingModal;\n"],"sourceRoot":""}