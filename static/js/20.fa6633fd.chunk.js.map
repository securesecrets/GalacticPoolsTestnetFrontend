{"version":3,"sources":["modals/DepositModal.js"],"names":["i","customStyles","content","top","left","right","bottom","marginRight","width","height","transform","backgroundColor","borderRadius","DepositModall","props","useState","balance","setBalance","inputBalance","setinputBalance","isDepositButtonEnabled","SetIsDepositButtonEnabled","isDepositing","setIsDepositing","secretjs","address","wallet","setWallet","setupKeplr","query","bank","denom","amount","String","process","tx","compute","executeContract","sender","contractAddress","codeHash","msg","deposit","sentFunds","gasLimit","console","log","jsonLog","Notifications","transactionHash","rawLog","am","clearfields","onInputchange","e","target","value","callback","hide","useEffect","setupKeplrfun","fetchBalance","DepositModal","isShowing","ReactDOM","createPortal","Fragment","isOpen","onRequestClose","contentLabel","style","ariaHideApp","className","type","aria-label","onClick","src","logo","alt","min","placeholder","placeholder-default","name","onChange","toFixed","disabled","document","body"],"mappings":"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","file":"static/js/20.fa6633fd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport { Button } from \"@windmill/react-ui\";\nimport logo from \"../assets/img/scrt_logo.png\"; // with import\nimport { setupKeplr } from \"../components/CryptoComponents/client\";\nimport ReactDOM from \"react-dom\";\nimport Notifications from \"../utils/demo/notifications.js\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    width: \"35%\",\n    height: \"35%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"#0f4d4a\",\n    borderRadius: \"1%\",\n    // padding: \"2%\",\n  },\n};\n\nfunction DepositModall(props) {\n  //fetch the balance\n  //create a state where you fetch secretjs once + the address\n  //\n\n  let [balance, setBalance] = useState(null);\n  let [inputBalance, setinputBalance] = useState(0);\n  let [isDepositButtonEnabled, SetIsDepositButtonEnabled] = useState(false);\n  let [isDepositing, setIsDepositing] = useState(false);\n\n  let [wallet, setWallet] = useState({ secretjs: null, address: null });\n\n  async function setupKeplrfun() {\n    const { secretjs, address } = await setupKeplr();\n    setWallet({ secretjs, address });\n  }\n\n  async function fetchBalance() {\n    // To create a readonly secret.js client, just pass in a gRPC-web endpoint\n    const { secretjs, address } = wallet;\n\n    const {\n      balance: { amount },\n    } = await secretjs.query.bank.balance({\n      address: address,\n      denom: \"uscrt\",\n    });\n    setBalance(amount);\n  }\n\n  async function deposit() {\n    setIsDepositing(true);\n    // To create a readonly secret.js client, just pass in a gRPC-web endpoint\n    const { secretjs, address } = wallet;\n\n    let amount = String(inputBalance * 1e6);\n    let contractAddress = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n    let codeHash = process.env.REACT_APP_POOL_CONTRACT_HASH;\n    try {\n      let tx = await secretjs.tx.compute.executeContract(\n        {\n          sender: address,\n          contractAddress: contractAddress,\n          codeHash: codeHash, // optional but way faster\n          msg: {\n            deposit: {},\n          },\n          sentFunds: [{ amount: amount, denom: \"uscrt\" }], // optional{}\n        },\n        {\n          gasLimit: 240297,\n        }\n      );\n      console.log(tx);\n\n      if (tx.jsonLog) {\n        Notifications(\n          \"success\",\n          \"Transaction sent!\",\n          `Successfully deposited: ${inputBalance} SCRT \\n \n        Txhash: ${tx.transactionHash}`\n        );\n      } else {\n        Notifications(\"error\", \"ERROR\", tx.rawLog);\n      }\n    } catch (err) {\n      Notifications(\"error\", \"ERROR\", err);\n    }\n\n    const {\n      balance: { amount: am },\n    } = await secretjs.query.bank.balance({\n      address: address,\n      denom: \"uscrt\",\n    });\n    setBalance(am);\n\n    // } catch (e) {\n    //   Notifications(\"error\", \"ERROR\", e);\n    // }\n\n    await clearfields();\n  }\n\n  useEffect(() => {\n    if (wallet.secretjs == null || wallet.address == null) {\n      setupKeplrfun();\n    }\n\n    if (wallet.secretjs != null || wallet.address != null) {\n      fetchBalance();\n    }\n\n    if (inputBalance !== 0) {\n      SetIsDepositButtonEnabled(true);\n    } else {\n      SetIsDepositButtonEnabled(false);\n    }\n\n    if (inputBalance * 1e6 > balance) {\n      SetIsDepositButtonEnabled(false);\n    }\n  }, [wallet, inputBalance]);\n\n  async function onInputchange(e) {\n    setinputBalance(e.target.value);\n  }\n\n  async function clearfields() {\n    await props.callback();\n    props.hide();\n    setinputBalance(0);\n    setIsDepositing(false);\n  }\n\n  const DepositModal = ({ isShowing, hide }) =>\n    isShowing\n      ? ReactDOM.createPortal(\n          <React.Fragment>\n            <Modal\n              isOpen={isShowing}\n              onRequestClose={clearfields}\n              contentLabel=\"Example Modal\"\n              style={customStyles}\n              ariaHideApp={false}\n            >\n              <div className=\"flex flex-col h-full justify-between\">\n                <div className=\"flex flex-row justify-between items-center\">\n                  <div className=\"\">\n                    <span className=\"deposit-modal-heading\">Deposit</span>\n                  </div>\n                  <div className=\"btn-close white\">\n                    <button\n                      type=\"Button\"\n                      className=\"btn-close white\"\n                      aria-label=\"Close\"\n                      onClick={clearfields}\n                    ></button>\n                  </div>\n                </div>\n\n                <div className=\"flex flex-row  justify-between items-center mt-4\">\n                  <div className=\"\">\n                    <span className=\"deposit-modal-available text-m\">\n                      Available\n                    </span>\n                  </div>\n                  <div className=\"flex flex-row \">\n                    <div className=\"d-flex align-items-center m-1\">\n                      <img\n                        src={logo}\n                        alt=\"LOGO Image\"\n                        className=\"img-fluid mini-logo-size\"\n                      />\n                    </div>\n                    <div className=\"ps-1 pool_past_prizes m-1\">\n                      {balance / 1e6} SCRT\n                    </div>\n                  </div>\n                </div>\n\n                <div\n                  className=\"flex flex-row  justify-between items-center  p-2\n              mt-2 deposit-modal-deposit-field deposit-modal-deposit-field-shape \"\n                >\n                  <div>\n                    <input\n                      className=\"deposit-modal-deposit-field text-white w-full\"\n                      type=\"number\"\n                      min=\"0\"\n                      placeholder=\"0.00\"\n                      placeholder-default=\"white\"\n                      name=\"inputBalance\"\n                      value={inputBalance}\n                      onChange={onInputchange}\n                    />\n                  </div>\n                  <div className=\"deposit-modal-deposit-field-tokens\">SCRT</div>\n                </div>\n                <div className=\"flex flex-row mt-4 items-center justify-between text-white \">\n                  <div\n                    className=\"deposit-modal-amount-percentage px-5 \"\n                    onClick={() => {\n                      setinputBalance(((balance / 1e6) * 0.25).toFixed(2));\n                    }}\n                  >\n                    <button>25%</button>\n                  </div>\n                  <div\n                    className=\"deposit-modal-amount-percentage  px-5\"\n                    onClick={() => {\n                      setinputBalance(((balance / 1e6) * 0.5).toFixed(2));\n                    }}\n                  >\n                    <button>50%</button>\n                  </div>\n                  <div\n                    className=\"deposit-modal-amount-percentage px-5 \"\n                    onClick={() => {\n                      setinputBalance(((balance / 1e6) * 0.75).toFixed(2));\n                    }}\n                  >\n                    <button>75%</button>\n                  </div>\n                  <div\n                    className=\"deposit-modal-amount-percentage  px-5\"\n                    onClick={() => {\n                      setinputBalance(balance / 1e6);\n                    }}\n                  >\n                    <button>100%</button>\n                  </div>\n                </div>\n                <div className=\"flex flex-row mt-4 items-center justify-between \">\n                  <Button\n                    className=\"btn account_deposit_button text-white self-center\"\n                    onClick={() => deposit()}\n                    disabled={!isDepositButtonEnabled}\n                  >\n                    {isDepositing ? (\n                      <div className=\"loader-1 center\">\n                        <span></span>\n                      </div>\n                    ) : (\n                      <div>Deposit</div>\n                    )}\n                  </Button>\n                </div>\n              </div>\n            </Modal>\n          </React.Fragment>,\n          document.body\n        )\n      : null;\n  return <DepositModal isShowing={props.isShowing} hide={props.hide} />;\n}\n\nexport default DepositModall;\n"],"sourceRoot":""}