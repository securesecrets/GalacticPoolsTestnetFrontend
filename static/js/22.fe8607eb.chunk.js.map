{"version":3,"sources":["modals/WithdrawableModal.js"],"names":["customStyles","content","top","left","right","bottom","marginRight","width","height","transform","backgroundColor","borderRadius","padding","UnbondingModal","props","useState","inputBalance","setinputBalance","isUnbondButtonEnabled","SetIsButtonEnabled","isUnbonding","setIsUnbonding","secretjs","address","wallet","setWallet","a","setupKeplr","amount","String","parseInt","process","tx","compute","executeContract","sender","contractAddress","codeHash","msg","withdraw","wrapping_enabled","gasLimit","Notifications","transactionHash","clearfields","onInputchange","e","target","value","callback","hide","useEffect","setupKeplrfun","withdrawable","UM","isShowing","ReactDOM","createPortal","Fragment","isOpen","onRequestClose","contentLabel","style","ariaHideApp","className","type","aria-label","onClick","src","logo","alt","min","placeholder","placeholder-default","name","onChange","toFixed","disabled","document","body"],"mappings":"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","file":"static/js/22.fe8607eb.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport { Button } from \"@windmill/react-ui\";\nimport logo from \"../assets/img/scrt_logo.png\"; // with import\nimport { setupKeplr } from \"../components/CryptoComponents/client\";\nimport ReactDOM from \"react-dom\";\nimport Notifications from \"../utils/demo/notifications.js\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    width: \"35%\",\n    height: \"35%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"#0f4d4a\",\n    borderRadius: \"1%\",\n    padding: \"2%\",\n  },\n};\n\nfunction UnbondingModal(props) {\n  //fetch the balance\n  //create a state where you fetch secretjs once + the address\n  //\n\n  let [inputBalance, setinputBalance] = useState(0);\n  let [isUnbondButtonEnabled, SetIsButtonEnabled] = useState(false);\n  let [isUnbonding, setIsUnbonding] = useState(false);\n\n  let [wallet, setWallet] = useState({ secretjs: null, address: null });\n\n  async function setupKeplrfun() {\n    const { secretjs, address } = await setupKeplr();\n    setWallet({ secretjs, address });\n  }\n\n  async function withdraw() {\n    setIsUnbonding(true);\n    // To create a readonly secret.js client, just pass in a gRPC-web endpoint\n    const { secretjs, address } = wallet;\n\n    let amount = String(parseInt(inputBalance * 1e6));\n    let contractAddress = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n    let codeHash = process.env.REACT_APP_POOL_CONTRACT_HASH;\n\n    try {\n      const tx = await secretjs.tx.compute.executeContract(\n        {\n          sender: address,\n          contractAddress: contractAddress,\n          codeHash: codeHash, // optional but way faster\n          msg: {\n            withdraw: {\n              amount: amount,\n              wrapping_enabled: false,\n            },\n          },\n        },\n        {\n          gasLimit: 240297,\n        }\n      );\n\n      Notifications(\n        \"success\",\n        \"Transaction sent!\",\n        `Successfully Unbonded: ${inputBalance} SCRT \\n \n        Txhash: ${tx.transactionHash}`\n      );\n    } catch (e) {\n      Notifications(\"error\", \"ERROR\", e);\n    }\n\n    await clearfields();\n  }\n\n  useEffect(() => {\n    if (wallet.secretjs == null || wallet.address == null) {\n      setupKeplrfun();\n    }\n    if (inputBalance != 0) {\n      SetIsButtonEnabled(true);\n    } else {\n      SetIsButtonEnabled(false);\n    }\n\n    if (inputBalance > props.withdrawable) {\n      SetIsButtonEnabled(false);\n    }\n  }, [wallet, inputBalance, props.withdrawable]);\n\n  async function onInputchange(e) {\n    setinputBalance(e.target.value);\n  }\n\n  async function clearfields() {\n    await props.callback();\n    props.hide();\n    setinputBalance(0);\n    setIsUnbonding(false);\n  }\n\n  const UM = ({ isShowing, hide }) =>\n    isShowing\n      ? ReactDOM.createPortal(\n          <React.Fragment>\n            <Modal\n              isOpen={isShowing}\n              onRequestClose={hide}\n              contentLabel=\"Example Modal\"\n              style={customStyles}\n              ariaHideApp={false}\n            >\n              <div className=\"flex flex-col h-full justify-between\">\n                <div>\n                  <div className=\"flex flex-row justify-between items-center\">\n                    <div className=\"\">\n                      <span className=\"deposit-modal-heading\">Withdraw</span>\n                    </div>\n                    <div className=\"btn-close white\">\n                      <button\n                        type=\"Button\"\n                        className=\"btn-close white\"\n                        aria-label=\"Close\"\n                        onClick={clearfields}\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"flex flex-row  justify-between items-center mt-4\">\n                  <div className=\"\">\n                    <span className=\"deposit-modal-available text-m\">\n                      Available\n                    </span>\n                  </div>\n                  <div className=\"flex flex-row \">\n                    <div className=\"d-flex align-items-center m-1\">\n                      <img\n                        src={logo}\n                        alt=\"LOGO Image\"\n                        className=\"img-fluid mini-logo-size\"\n                      />\n                    </div>\n                    <div className=\"ps-1 pool_past_prizes m-1\">\n                      {props.withdrawable / 1e6} SCRT\n                    </div>\n                  </div>\n                </div>\n\n                <div\n                  className=\"flex flex-row  justify-between items-center  p-2\n              mt-2 deposit-modal-deposit-field deposit-modal-deposit-field-shape \"\n                >\n                  <div>\n                    <input\n                      className=\"deposit-modal-deposit-field text-white w-full\"\n                      type=\"number\"\n                      min=\"0\"\n                      placeholder=\"0.00\"\n                      placeholder-default=\"white\"\n                      name=\"inputBalance\"\n                      value={inputBalance}\n                      onChange={onInputchange}\n                    />\n                  </div>\n                  <div className=\"deposit-modal-deposit-field-tokens\">SCRT</div>\n                </div>\n                <div className=\"flex flex-row mt-4 items-center justify-between text-white \">\n                  <div\n                    className=\"deposit-modal-amount-percentage px-5 \"\n                    onClick={() => {\n                      setinputBalance(\n                        ((props.withdrawable / 1e6) * 0.25).toFixed(2)\n                      );\n                    }}\n                  >\n                    <button>25%</button>\n                  </div>\n                  <div\n                    className=\"deposit-modal-amount-percentage  px-5\"\n                    onClick={() => {\n                      setinputBalance(\n                        ((props.withdrawable / 1e6) * 0.5).toFixed(2)\n                      );\n                    }}\n                  >\n                    <button>50%</button>\n                  </div>\n                  <div\n                    className=\"deposit-modal-amount-percentage px-5 \"\n                    onClick={() => {\n                      setinputBalance(\n                        ((props.withdrawable / 1e6) * 0.75).toFixed(2)\n                      );\n                    }}\n                  >\n                    <button>75%</button>\n                  </div>\n                  <div\n                    className=\"deposit-modal-amount-percentage  px-5\"\n                    onClick={() => {\n                      setinputBalance(props.withdrawable / 1e6);\n                    }}\n                  >\n                    <button>100%</button>\n                  </div>\n                </div>\n                <div className=\"btn    \">\n                  <Button\n                    className=\"btn account_deposit_button text-white self-center\"\n                    onClick={() => withdraw()}\n                    disabled={!isUnbondButtonEnabled}\n                  >\n                    {isUnbonding ? (\n                      <div className=\"loader-1 center\">\n                        <span>.</span>\n                      </div>\n                    ) : (\n                      <div>Withdraw</div>\n                    )}\n                  </Button>\n                </div>\n              </div>\n            </Modal>\n          </React.Fragment>,\n          document.body\n        )\n      : null;\n  return <UM isShowing={props.isShowing} hide={props.hide} />;\n}\n\nexport default UnbondingModal;\n"],"sourceRoot":""}