{"version":3,"sources":["assets/img/gift.png","components/Cards/PoolCard.js","utils/demo/useModals.js","pages/UserView.js","pages/UserPoolDetails.js","pages/UserPools.js","assets/img/scrt_logo.png","components/CryptoComponents/client.js","utils/demo/notifications.js","components/RoundIcon.js"],"names":["module","exports","PoolCard","title","value","setViewStatus","children","onClick","event","className","style","cursor","src","logo","alt","useModal","useState","isShowing","setIsShowing","toggle","DepositModal","lazy","UnbondingModal","WithdrawableModal","UserView","isDepositModalShowing","depositToggle","isUnbondModalShowing","unbondToggle","isWithdrawModalShowing","withdrawToggle","isPermit","setisPermit","delegated","setDelegated","withdrawable","setWithdrawable","unbondings","setUnbondings","userInfo","setuserInfo","lotteryInfo","setLotteryInfo","liquidity","setLiquidity","unclaimedRoundsLiq","setUnclaimedRoundsLiq","winningRecords","setWinningRecords","days","hours","mins","timer","setTimer","a","setupKeplr","secretjs","address","process","permitName","localStorage","getItem","allowedTokens","permissions","utils","accessControl","permit","sign","setItem","JSON","stringify","fetchDelegated","parse","query","compute","queryContract","contractAddress","codeHash","with_permit","amount","balance","fetchUnbondings","now","Date","len","i","vec","length","next_batch_unbonding_time","date","toISOString","slice","replace","unbonding_time","isClaimable","fetchLiquidity","contract_address","user_info","lottery_info","round_index","current_round_index","current_liquidity","console","log","start","last_claim_rewards_round","starting_round","end","unclaimed_round_info","date_now","parseInt","is_reward_expired","expiry_date","push","fetchUserStats","fetchWithdrawable","records","page_size","extra","start_page","end_page","result_vec","rec","concat","reverse","tx","executeContract","sender","msg","claim_rewards","gasLimit","jsonLog","Notifications","transactionHash","rawLog","claimRewardsCallback","fetchTimer","end_time","date_future","delta","Math","abs","floor","minutes","setTimeout","useEffect","checkPermit","fetchLotteryInfo","fetchUserWinningRecords","background","toFixed","fontSize","gift","disabled","hide","callback","price_per_ticket","user_tickets","total_tickets","map","index","key","tickets_used","type","total_rewards","unclaimed_rewards","totalResults","resultsPerPage","onChange","label","batch_index","round","total_amount_won","UserPoolDetails","props","setValue","selectedIndex","onSelect","border","borderRadius","marginBottom","e","target","UserPools","param","setState","pool_id","state","bind","this","RoundIcon","icon","MoneyIcon","iconColorClass","bgColorClass","React","Component","sleep","number","Promise","resolve","SECRET_REST_API","SECRET_CHAIN_ID","window","keplr","getEnigmaUtils","getOfflineSignerOnlyAmino","enable","keplrOfflineSigner","getAccounts","myAddress","grpcWebUrl","SecretNetworkClient","create","chainId","wallet","walletAddress","encryptionUtils","obj","dotenv","path","toastMixin","Swal","mixin","toast","position","showConfirmButton","timerProgressBar","showCloseButton","didOpen","addEventListener","stopTimer","resumeTimer","message","fire","text","color","Icon","cls","classNames"],"mappings":"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","file":"static/js/9.21290e31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gift.d2784fb5.png\";","import React from \"react\";\nimport { Card, CardBody, Button } from \"@windmill/react-ui\";\nimport logo from \"../../assets/img/scrt_logo.png\"; // with import\n\nimport \"../../main.css\";\nfunction PoolCard({ title, value, children: icon, setViewStatus }) {\n  return (\n    <Card\n      onClick={(event) => setViewStatus(\"scrt\")}\n      className=\"btn\"\n      style={{ cursor: \"pointer\" }}\n    >\n      <CardBody className=\" flex flex-row items-center justify-between dark:bg-primary2 \">\n        <div className=\"flex flex-row \">\n          <img src={logo} alt=\"LOGO Image\" className=\"img-fluid logo-size\" />\n          <p className=\"text-sm  flex items-center font-semibold text-gray-600 dark:text-white\">\n            SCRT\n          </p>\n        </div>\n        <div className=\"flex flex-col items-center justify-between \">\n          <div className=\"mb-2 prize_amount  \">{value}</div>\n          <div className=\"text-lg font-semibold text-gray-700 dark:text-white\">\n            {title}\n          </div>\n        </div>\n        <div>\n          <div className=\"flex flex-row  justify-between\">\n            <div className=\"flex flex-col justify-center\">\n              <div className=\"p-2\">\n                <span className=\"p-2 m-1 date_digit\">0</span>\n                <span className=\"p-2 m-1 date_digit\">0</span>\n              </div>\n              <div className=\"flex justify-center\">\n                <span className=\"date_title\">DAY</span>\n              </div>\n            </div>\n            <div className=\"flex flex-col item-center justify-start\">\n              <div className=\"p-2\">\n                <span className=\"colon\">:</span>\n              </div>\n            </div>\n            <div className=\"flex flex-col justify-center\">\n              <div className=\"p-2\">\n                <span className=\"p-2 m-1 date_digit\">0</span>\n                <span className=\"p-2 m-1 date_digit\">0</span>\n              </div>\n              <div className=\"flex justify-center\">\n                <span className=\"date_title\">HR</span>\n              </div>\n            </div>\n\n            <div className=\"flex flex-col item-center justify-start\">\n              <div className=\"p-2\">\n                <span className=\"colon\">:</span>\n              </div>\n            </div>\n            <div className=\"flex flex-col justify-center\">\n              <div className=\"p-2\">\n                <span className=\"p-2 m-1 date_digit\">0</span>\n                <span className=\"p-2 m-1 date_digit\">0</span>\n              </div>\n              <div className=\"flex justify-center\">\n                <span className=\"date_title\">MIN</span>\n              </div>\n            </div>\n\n            <div className=\"flex flex-col item-center justify-start\">\n              <div className=\"p-2\">\n                <span className=\"colon\">:</span>\n              </div>\n            </div>\n            <div className=\"flex flex-col justify-center\">\n              <div className=\"p-2\">\n                <span className=\"p-2 m-1 date_digit\">5</span>\n                <span className=\"p-2 m-1 date_digit\">0</span>\n              </div>\n              <div className=\"flex justify-center\">\n                <span className=\"date_title\">SEC</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default PoolCard;\n","import { useState } from \"react\";\n\nconst useModal = () => {\n  const [isShowing, setIsShowing] = useState(false);\n\n  function toggle() {\n    setIsShowing(!isShowing);\n  }\n\n  return {\n    isShowing,\n    toggle,\n  };\n};\n\nexport default useModal;\n","import React, { useState, useEffect, lazy } from \"react\";\nimport { Button } from \"@windmill/react-ui\";\nimport Notifications from \"../utils/demo/notifications.js\";\nimport logo from \"../assets/img/scrt_logo.png\"; // with import\nimport useModal from \"../utils/demo/useModals.js\";\nimport gift from \"../assets/img/gift.png\";\nimport { setupKeplr } from \"../components/CryptoComponents/client\";\nimport {\n  TableContainer,\n  Table,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableFooter,\n  Avatar,\n  Pagination,\n  Badge,\n} from \"@windmill/react-ui\";\nimport { TxResponse } from \"secretjs/dist/protobuf_stuff/cosmos/base/abci/v1beta1/abci.js\";\nconst DepositModal = lazy(() => import(\"../modals/DepositModal\"));\nconst UnbondingModal = lazy(() => import(\"../modals/UnbondingModal\"));\nconst WithdrawableModal = lazy(() => import(\"../modals/WithdrawableModal\"));\n\nfunction UserView() {\n  const { isShowing: isDepositModalShowing, toggle: depositToggle } =\n    useModal();\n  const { isShowing: isUnbondModalShowing, toggle: unbondToggle } = useModal();\n  const { isShowing: isWithdrawModalShowing, toggle: withdrawToggle } =\n    useModal();\n\n  const [isPermit, setisPermit] = useState(false);\n  const [delegated, setDelegated] = useState(null);\n  const [withdrawable, setWithdrawable] = useState(null);\n  const [unbondings, setUnbondings] = useState(null);\n  const [userInfo, setuserInfo] = useState(null);\n\n  const [lotteryInfo, setLotteryInfo] = useState(null);\n  const [liquidity, setLiquidity] = useState(null);\n  const [unclaimedRoundsLiq, setUnclaimedRoundsLiq] = useState([]);\n  const [winningRecords, setWinningRecords] = useState([]);\n\n  const [timer, setTimer] = useState({\n    days: \"-\",\n    hours: \"-\",\n    mins: \"-\",\n  });\n\n  useEffect(() => {\n    if (!isPermit) {\n      checkPermit();\n    }\n    if (timer.days == \"-\") {\n      fetchTimer();\n    }\n  });\n\n  useEffect(() => {\n    if (isPermit) {\n      fetchDelegated();\n      fetchUnbondings();\n      fetchWithdrawable();\n      fetchLotteryInfo();\n      fetchLiquidity();\n      fetchUserWinningRecords();\n    }\n  }, [isPermit]);\n\n  async function checkPermit() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = localStorage.getItem(permitName);\n\n    if (permit != null) {\n      setisPermit(true);\n    }\n  }\n\n  async function setPermit() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    const allowedTokens = [contract_address];\n    const permissions = [\"owner\"];\n    const chainId = process.env.REACT_APP_SECRET_CHAIN_ID;\n\n    let permit = await secretjs.utils.accessControl.permit.sign(\n      address,\n      chainId,\n      permitName,\n      allowedTokens,\n      permissions,\n      true\n    );\n    localStorage.setItem(permitName, JSON.stringify(permit));\n\n    setisPermit(true);\n  }\n\n  async function fetchDelegated() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    // now fetch the balance here lol\n    let delegated = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            delegated: {},\n          },\n        },\n      },\n    });\n\n    if (delegated.amount != null) {\n      const balance = delegated.amount;\n      setDelegated(balance);\n    } else {\n      setDelegated(0);\n    }\n  }\n\n  async function fetchUnbondings() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    // now fetch the balance here lol\n    let unbondings = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            unbondings: {},\n          },\n        },\n      },\n    });\n\n    const now = new Date();\n\n    if (unbondings.len != 0) {\n      for (let i = 0; i < unbondings.vec.length; i++) {\n        if (unbondings.vec[i].next_batch_unbonding_time != null) {\n          let date = new Date(\n            unbondings.vec[i].next_batch_unbonding_time * 1000\n          );\n          unbondings.vec[i].next_batch_unbonding_time = `${date\n            .toISOString()\n            .slice(0, 19)\n            .replace(\"T\", \" \")} UTC`;\n        }\n        if (unbondings.vec[i].unbonding_time != null) {\n          if (now / 1000 >= unbondings.vec[i].unbonding_time) {\n            unbondings.vec[i].isClaimable = true;\n          } else {\n            unbondings.vec[i].isClaimable = false;\n          }\n          let date = new Date(unbondings.vec[i].unbonding_time * 1000);\n          unbondings.vec[i].unbonding_time = `${date\n            .toISOString()\n            .slice(0, 19)\n            .replace(\"T\", \" \")} UTC`;\n        }\n      }\n      setUnbondings(unbondings.vec);\n    } else {\n      setUnbondings([]);\n    }\n  }\n\n  async function fetchLiquidity() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    let user_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            user_info: {},\n          },\n        },\n      },\n    });\n\n    setuserInfo(user_info);\n\n    let start;\n    let end;\n    let lottery_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        lottery_info: {},\n      },\n    });\n\n    let current_liquidity = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            liquidity: { round_index: lottery_info.current_round_index },\n          },\n        },\n      },\n    });\n\n    console.log(current_liquidity);\n\n    setLiquidity(current_liquidity);\n\n    let current_liq = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            liquidity: { round_index: lottery_info.current_round_index - 1 },\n          },\n        },\n      },\n    });\n\n    if (user_info.last_claim_rewards_round) {\n      start = user_info.last_claim_rewards_round + 1;\n    } else {\n      if (user_info.starting_round) {\n        start = user_info.starting_round;\n      } else {\n        start = lottery_info.current_round_index;\n      }\n    }\n\n    end = lottery_info.current_round_index;\n\n    let unclaimed_round_info = [];\n    for (let i = start; i < end; i++) {\n      let liquidity = await secretjs.query.compute.queryContract({\n        contractAddress: contract_address,\n        codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n        query: {\n          with_permit: {\n            permit,\n            query: {\n              liquidity: { round_index: i },\n            },\n          },\n        },\n      });\n\n      liquidity.round_index = i;\n      let date_now = parseInt(new Date() / 1000);\n\n      liquidity.is_reward_expired =\n        liquidity.expiry_date < date_now ? true : false;\n\n      unclaimed_round_info.push(liquidity);\n    }\n    setUnclaimedRoundsLiq(unclaimed_round_info);\n  }\n\n  async function fetchUserStats() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    let user_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            user_info: {},\n          },\n        },\n      },\n    });\n\n    setuserInfo(user_info);\n    let lottery_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        lottery_info: {},\n      },\n    });\n\n    let current_liquidity = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            liquidity: { round_index: lottery_info.current_round_index },\n          },\n        },\n      },\n    });\n    setLiquidity(current_liquidity);\n  }\n  async function fetchWithdrawable() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    // now fetch the balance here lol\n    let withdrawable = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            withdrawable: {},\n          },\n        },\n      },\n    });\n\n    setWithdrawable(withdrawable.amount);\n  }\n\n  async function fetchLotteryInfo() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    // now fetch the balance here lol\n    let lottery_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        lottery_info: {},\n      },\n    });\n    setLotteryInfo(lottery_info);\n  }\n\n  async function fetchUserWinningRecords() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    // now fetch the balance here lol\n    let records = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            records: {},\n          },\n        },\n      },\n    });\n\n    //fetching last 10 records only\n    let page_number;\n    let page_size = 5;\n    if (records.len > page_size) {\n      let extra = records.len % page_size;\n      let start_page = parseInt(records.len / page_size) - 1;\n      let end_page;\n      if (extra > 0) {\n        end_page = start_page + 1;\n      } else {\n        end_page = start_page;\n      }\n\n      let result_vec = [];\n      for (let i = start_page; i <= end_page; i++) {\n        let rec = await secretjs.query.compute.queryContract({\n          contractAddress: contract_address,\n          codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n          query: {\n            with_permit: {\n              permit,\n              query: {\n                records: { start_page: i, page_size },\n              },\n            },\n          },\n        });\n        result_vec = result_vec.concat(rec.vec);\n      }\n      setWinningRecords(result_vec.reverse());\n      console.log(result_vec);\n    } else {\n      setWinningRecords(records.vec.reverse());\n    }\n\n    // console.log(records.vec);\n  }\n\n  async function claim_rewards() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contractAddress = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n    let codeHash = process.env.REACT_APP_POOL_CONTRACT_HASH;\n\n    try {\n      const tx = await secretjs.tx.compute.executeContract(\n        {\n          sender: address,\n          contractAddress: contractAddress,\n          codeHash: codeHash, // optional but way faster\n          msg: {\n            claim_rewards: {},\n          },\n        },\n        {\n          gasLimit: 240297,\n        }\n      );\n\n      if (tx.jsonLog) {\n        Notifications(\n          \"success\",\n          \"Transaction sent!\",\n          `Successfully claim rewards\n        Txhash: ${tx.transactionHash}`\n        );\n      } else {\n        Notifications(\"error\", \"ERROR\", tx.rawLog);\n      }\n    } catch (e) {\n      Notifications(\"error\", \"ERROR\", e);\n    }\n\n    await claimRewardsCallback();\n  }\n\n  async function fetchTimer() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    // now fetch the balance here lol\n    let lottery_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        lottery_info: {},\n      },\n    });\n\n    setLotteryInfo(lottery_info);\n\n    let date_now = parseInt(new Date() / 1000);\n\n    if (date_now < lottery_info.end_time) {\n      let date_future = lottery_info.end_time;\n      // get total seconds between the times\n      var delta = Math.abs(date_future - date_now);\n\n      // calculate (and subtract) whole days\n      var days = Math.floor(delta / 86400);\n      delta -= days * 86400;\n\n      // calculate (and subtract) whole hours\n      var hours = Math.floor(delta / 3600) % 24;\n      delta -= hours * 3600;\n\n      // calculate (and subtract) whole minutes\n      var minutes = Math.floor(delta / 60) % 60;\n      delta -= minutes * 60;\n\n      // what's left is seconds\n      // var seconds = delta % 60;\n\n      let timer = { days: days, hours: hours, mins: minutes };\n\n      setTimer(timer);\n    } else {\n      let timer = { days: 0, hours: 0, mins: 0 };\n\n      setTimer(timer);\n    }\n    setTimeout(() => {\n      fetchTimer();\n    }, 60 * 1000);\n  }\n\n  async function depositCallback() {\n    await fetchDelegated();\n    await fetchUserStats();\n  }\n\n  async function unbondingCallback() {\n    await fetchDelegated();\n    await fetchUnbondings();\n  }\n\n  async function withdrawCallback() {\n    await fetchWithdrawable();\n    await fetchUnbondings();\n  }\n\n  async function claimRewardsCallback() {\n    await fetchLiquidity();\n  }\n\n  return (\n    <div>\n      <div className=\" grid grid-cols-7 mt-4 grid-parent \">\n        <div\n          className=\"col-span-2 p-4 account_deposit_card mr-1\"\n          style={{ background: \"linear-gradient(to right,#9A47B9, #4D2D9F)\" }}\n        >\n          <div className=\"flex flex-row  account_deposit_title\">Deposits</div>\n          {!isPermit ? (\n            <div\n              className=\"flex flex-row p-3 items-center justify-start\"\n              style={{ cursor: \"pointer\" }}\n              onClick={setPermit}\n            >\n              <span style={{ fontSize: \"20px\" }}>&#128269;</span>\n\n              <span className=\"createViewingKey p-4\">\n                CREATE VIEWING PERMIT\n              </span>\n            </div>\n          ) : (\n            <div>\n              {\" \"}\n              {delegated == null ? (\n                <div>Loading...</div>\n              ) : (\n                <div className=\"flex flex-row justify-start items-end\">\n                  <span className=\"account_deposit_amount mr-1\">\n                    {(delegated / 1e6).toFixed(2)}\n                    <span className=\"account_deposit_denom  \">SCRT</span>\n                  </span>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"col-span-5 bg-primary2 account_deposit_card  gap-4 p-4\">\n          <div className=\"flex flex-row h-full w-full justify-between \">\n            <div className=\"flex flex-row items-center justify-center \">\n              <span className=\" align-self-center d-flex justify-content-end\">\n                <img\n                  src={logo}\n                  alt=\"LOGO Image\"\n                  className=\"img-fluid logo-size\"\n                />\n              </span>\n\n              <span className=\" ml-4 \">\n                <div className=\"account_token_title\">SCRT</div>\n              </span>\n            </div>\n\n            <div className=\"flex flex-col w-full items-end justify-between \">\n              <div>\n                <div className=\"flex flex-row items-center justify-start \">\n                  <span className=\"\">\n                    <img\n                      src={gift}\n                      alt=\"LOGO Image\"\n                      className=\"img-fluid logo-size\"\n                    />\n                  </span>\n\n                  <span className=\" ml-4 \">\n                    <div className=\"account_time_font\">\n                      in {timer.days}d ,{timer.hours}h ,{timer.mins}m{\" \"}\n                    </div>\n                  </span>\n                </div>\n              </div>\n              <div className=\"flex flex-row w-full items-center justify-center\">\n                <div className=\"btn account_reduce_stakes_withdraw_button   m-1 self-center\">\n                  <Button\n                    className=\"btn account_reduce_stakes_withdraw_button  self-center\"\n                    onClick={claim_rewards}\n                  >\n                    Claim Rewards\n                  </Button>\n                </div>\n                <div className=\"btn account_reduce_stakes_withdraw_button   m-1\">\n                  <Button\n                    className=\"btn account_reduce_stakes_withdraw_button  self-center\"\n                    disabled={\n                      withdrawable == null || withdrawable == 0 ? true : false\n                    }\n                    onClick={withdrawToggle}\n                  >\n                    Withdraw\n                  </Button>\n                  <WithdrawableModal\n                    isShowing={isWithdrawModalShowing}\n                    hide={withdrawToggle}\n                    callback={withdrawCallback}\n                    withdrawable={withdrawable}\n                  />\n                </div>\n                <div className=\"btn account_reduce_stakes_withdraw_button   m-1\">\n                  <Button\n                    className=\"btn account_reduce_stakes_withdraw_button  self-center\"\n                    onClick={unbondToggle}\n                    disabled={\n                      delegated == null || delegated == 0 ? true : false\n                    }\n                  >\n                    Unbond\n                  </Button>\n                  <UnbondingModal\n                    isShowing={isUnbondModalShowing}\n                    hide={unbondToggle}\n                    callback={unbondingCallback}\n                    delegated={delegated}\n                  />\n                </div>\n                <div className=\"btn account_reduce_stakes_withdraw_button   m-1\">\n                  <Button\n                    className=\"btn account_deposit_button  self-center\"\n                    onClick={depositToggle}\n                  >\n                    Deposit\n                  </Button>\n                  <DepositModal\n                    isShowing={isDepositModalShowing}\n                    hide={depositToggle}\n                    callback={depositCallback}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"flex flex-col mt-6 p-6 bg-primary2 text-white account_deposit_card\">\n        <div className=\" text-2xl \">User Stats</div>\n        <div className=\" border\"></div>\n\n        <TableContainer>\n          <Table>\n            <TableBody>\n              <TableRow className=\"bg-primary2\">\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"font-semibold ml-2\">\n                      Amount Withdrawable\n                    </span>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm justify-self-end\">\n                    {(withdrawable / 1e6).toFixed(2)} SCRT\n                  </span>\n                </TableCell>\n              </TableRow>\n              <TableRow className=\"bg-primary2\">\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"font-semibold ml-2\">Ticket Price</span>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm justify-self-end\">\n                    {lotteryInfo\n                      ? (lotteryInfo.price_per_ticket / 1e6).toFixed(2)\n                      : 0}{\" \"}\n                    SCRT\n                  </span>\n                </TableCell>\n              </TableRow>\n              <TableRow className=\"bg-primary2\">\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"font-semibold ml-2\">\n                      User Tickets / Total Tickets\n                    </span>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm justify-self-end\">\n                    {liquidity ? liquidity.user_tickets : 0} /{\" \"}\n                    {liquidity ? liquidity.total_tickets : 0} {\" (\"}\n                    {liquidity\n                      ? (\n                          ((liquidity.user_tickets\n                            ? liquidity.user_tickets\n                            : 0) /\n                            (liquidity.total_tickets != 0\n                              ? liquidity.total_tickets\n                              : 1)) *\n                          100\n                        ).toFixed(2)\n                      : 0}\n                    %{\") \"}\n                  </span>\n                </TableCell>\n              </TableRow>\n              <TableRow className=\"bg-primary2\">\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"font-semibold ml-2\">\n                      Last round claimed\n                    </span>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm justify-self-end\">\n                    {userInfo\n                      ? userInfo.last_claim_rewards_round\n                        ? userInfo.last_claim_rewards_round\n                        : \"-\"\n                      : 0}\n                  </span>\n                </TableCell>\n              </TableRow>\n              <TableRow className=\"bg-primary2\">\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"font-semibold ml-2\">Current Round</span>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm justify-self-end\">\n                    {lotteryInfo ? lotteryInfo.current_round_index : 0}\n                  </span>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n\n      <div className=\"flex flex-col mt-6 p-6 bg-primary2 text-white account_deposit_card\">\n        <div className=\" text-2xl \">User Liquidity</div>\n        <div className=\" border\"></div>\n        <div className=\"flex flex-row justify-between\">\n          <TableContainer>\n            <Table>\n              <TableHeader>\n                <TableRow className=\"bg-primary2 items-center justify-center text-white\">\n                  <TableCell>Round Index</TableCell>\n                  <TableCell>Total Tickets</TableCell>\n                  <TableCell>Tickets Used</TableCell>\n                  <TableCell>Rewards Expired ?</TableCell>\n                  <TableCell>Total Rewards</TableCell>\n                  <TableCell>Unclaimed Rewards</TableCell>\n                </TableRow>\n              </TableHeader>\n              {unclaimedRoundsLiq ? (\n                <TableBody>\n                  {unclaimedRoundsLiq.map((value, index) => {\n                    return (\n                      <TableRow key={index} className=\"bg-primary2\">\n                        <TableCell>\n                          <span className=\"text-sm\">{value.round_index}</span>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {value.user_tickets}\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {value.tickets_used}\n                            </span>\n                          </div>\n                        </TableCell>\n\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            {value.is_reward_expired ? (\n                              <Badge type=\"success\">Yes</Badge>\n                            ) : (\n                              <Badge type=\"danger\">NO</Badge>\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {(value.total_rewards / 1e6).toFixed(6)} SCRT\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {(value.unclaimed_rewards / 1e6).toFixed(6)} SCRT\n                            </span>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              ) : (\n                <TableBody></TableBody>\n              )}\n            </Table>\n            {(unclaimedRoundsLiq ? unclaimedRoundsLiq.length : 0) > 5 ? (\n              <TableFooter>\n                <Pagination\n                  totalResults={\n                    unclaimedRoundsLiq ? unclaimedRoundsLiq.length : 0\n                  }\n                  resultsPerPage={5}\n                  onChange={() => {}}\n                  label=\"Table navigation\"\n                />\n              </TableFooter>\n            ) : (\n              <div></div>\n            )}\n          </TableContainer>\n        </div>\n      </div>\n\n      <div className=\"flex flex-col mt-6 p-6 bg-primary2 text-white account_deposit_card\">\n        <div className=\" text-2xl \">Unbondings</div>\n        <div className=\" border\"></div>\n        <div className=\"flex flex-row justify-between\">\n          <TableContainer>\n            <Table>\n              <TableHeader>\n                <TableRow className=\"bg-primary2 items-center justify-center text-white\">\n                  <TableCell>Amount</TableCell>\n                  <TableCell>Unbonding Batch Index</TableCell>\n                  <TableCell>Claimable ?</TableCell>\n                  <TableCell>Batch Unbond Time</TableCell>\n                  <TableCell>Unbonding Time</TableCell>\n                </TableRow>\n              </TableHeader>\n              {unbondings ? (\n                <TableBody>\n                  {unbondings.map((value, index) => {\n                    return (\n                      <TableRow key={index} className=\"bg-primary2\">\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(value.amount / 1e6).toFixed(2)} SCRT\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {value.batch_index}\n                            </span>\n                          </div>\n                        </TableCell>\n\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            {value.isClaimable ? (\n                              <Badge type=\"success\">Yes</Badge>\n                            ) : (\n                              <Badge type=\"danger\">NO</Badge>\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {value.next_batch_unbonding_time\n                                ? value.next_batch_unbonding_time\n                                : \"Already Unbonded\"}\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {value.unbonding_time\n                                ? value.unbonding_time\n                                : \"-\"}\n                            </span>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              ) : (\n                <TableBody></TableBody>\n              )}\n            </Table>\n            {(unbondings ? unbondings.length : 0) >= 5 ? (\n              <TableFooter>\n                <Pagination\n                  totalResults={unbondings.length}\n                  resultsPerPage={5}\n                  onChange={() => {}}\n                  label=\"Table navigation\"\n                />\n              </TableFooter>\n            ) : (\n              <div></div>\n            )}\n          </TableContainer>\n        </div>\n      </div>\n      <div className=\"flex flex-col mt-6 p-6 bg-primary2 text-white account_deposit_card\">\n        <div className=\" text-2xl \">User Winnings</div>\n        <div className=\" border\"></div>\n        <div className=\"flex flex-row justify-between\">\n          <TableContainer>\n            <Table>\n              <TableHeader>\n                <TableRow className=\"bg-primary2 items-center justify-center text-white\">\n                  <TableCell>Round</TableCell>\n                  <TableCell>Total Winnings</TableCell>\n                  <TableCell>Tikcets</TableCell>\n                  <TableCell>Ticket Price</TableCell>\n                  <TableCell>Details</TableCell>\n                </TableRow>\n              </TableHeader>\n              {winningRecords ? (\n                <TableBody>\n                  {winningRecords.map((value, index) => {\n                    return (\n                      <TableRow key={index} className=\"bg-primary2\">\n                        <TableCell>\n                          <span className=\"text-sm\">{value.round}</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(value.total_amount_won / 1e6).toFixed(2)} SCRT\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(value.liquidity / 1e6).toFixed(2)}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(value.liquidity / 1e6).toFixed(2)} SCRT\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">Details</span>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              ) : (\n                <TableBody></TableBody>\n              )}\n            </Table>\n            {(winningRecords ? winningRecords.length : 0) > 5 ? (\n              <TableFooter>\n                <Pagination\n                  totalResults={winningRecords ? winningRecords.length : 0}\n                  resultsPerPage={5}\n                  onChange={() => {}}\n                  label=\"Table navigation\"\n                />\n              </TableFooter>\n            ) : (\n              <div></div>\n            )}\n          </TableContainer>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserView;\n","import React, { useState } from 'react'\n\nimport PageTitle from '../components/Typography/PageTitle'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\nimport UserView from './UserView'\nfunction UserPoolDetails (props) {\n  const [value, setValue] = useState(0)\n\n  return (\n    <div>\n      <div>\n        <button\n          onClick={event => props.setViewStatus(null)}\n          className='text-white hover:text-gray-400'\n        >\n          Go Back\n        </button>\n        <Tabs selectedIndex={value} onSelect={index => console.log(index)}>\n          <div className='dropMenu flex justify-end'>\n            <select\n              className=' tabSelect  w-1/4 text-center h-10 text-m dark:text-gray-200 focus:outline-none focus:border-blue-400 dark:border-gray-600 dark:bg-gray-700 focus:shadow-outline-purple dark:focus:shadow-outline-gray dark:focus:border-gray-600 form-number leading-5'\n              style={{\n                border: '2px solid #ac94fa ',\n                borderRadius: '5px',\n                marginBottom: '2px'\n              }}\n              onChange={e => {\n                setValue(e.target.selectedIndex)\n              }}\n            >\n              <option value={1}>USER VIEW </option>\n              <option value={2}>POOL STATS</option>\n            </select>\n          </div>\n\n          <TabList className=''>\n            <Tab onClick={() => setValue(0)}></Tab>\n            <Tab onClick={() => setValue(1)}></Tab>\n          </TabList>\n\n          <div className='Panel'>\n            <TabPanel>\n              <div className='text-sm text-gray-600 dark:text-gray-400'>\n                <UserView />\n              </div>\n            </TabPanel>\n            <TabPanel>\n              <div className='text-sm text-gray-600 dark:text-gray-400'>\n                POOL STATS\n              </div>\n            </TabPanel>\n          </div>\n        </Tabs>\n      </div>\n    </div>\n  )\n}\n\nexport default UserPoolDetails\n","import React from \"react\";\n\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport PoolCard from \"../components/Cards/PoolCard\";\nimport RoundIcon from \"../components/RoundIcon\";\nimport { ChatIcon, CartIcon, MoneyIcon, PeopleIcon } from \"../icons\";\nimport UserPoolDetails from \"./UserPoolDetails\";\nimport logo from \"../assets/img/scrt_logo.png\"; // with import\n\nclass UserPools extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pool_id: null,\n    };\n    this.setViewStatus = this.setViewStatus.bind(this);\n  }\n  setViewStatus = (param) => {\n    this.setState({ pool_id: param });\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.state.pool_id ? (\n          <div\n            className=\"grid gap-6 mt-8 mb-8 md:grid-cols-1 xl:grid-cols-1\"\n            onClick={(event) => this.setViewStatus(\"scrt\")}\n          >\n            <PoolCard\n              title=\"Prize\"\n              value=\"$50,000\"\n              setViewStatus={this.setViewStatus}\n            >\n              <RoundIcon\n                icon={MoneyIcon}\n                iconColorClass=\"text-blue-500 dark:text-blue-100\"\n                bgColorClass=\"bg-purple-100 dark:bg-purple-500\"\n                className=\"mr-4\"\n              />\n            </PoolCard>\n          </div>\n        ) : (\n          <div>\n            <UserPoolDetails setViewStatus={this.setViewStatus} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default UserPools;\n","module.exports = __webpack_public_path__ + \"static/media/scrt_logo.0fe47b33.png\";","import { SecretNetworkClient } from \"secretjs\";\nimport * as dotenv from \"dotenv\"; // see https://github.com/motdotla/dotenv#how-do-i-use-dotenv-with-import\ndotenv.config({ path: \"../../../.env\" });\n\nexport async function setupKeplr() {\n  const sleep = (number) =>\n    new Promise((resolve) => setTimeout(resolve, number));\n  const SECRET_REST_API = process.env.REACT_APP_SECRET_REST_URL;\n\n  const SECRET_CHAIN_ID = process.env.REACT_APP_SECRET_CHAIN_ID;\n\n  while (\n    !window.keplr ||\n    !window.getEnigmaUtils ||\n    !window.getOfflineSignerOnlyAmino\n  ) {\n    await sleep(50);\n  }\n\n  await window.keplr.enable(SECRET_CHAIN_ID);\n  const keplrOfflineSigner =\n    window.keplr.getOfflineSignerOnlyAmino(SECRET_CHAIN_ID);\n\n  const [{ address: myAddress }] = await keplrOfflineSigner.getAccounts();\n\n  const grpcWebUrl = SECRET_REST_API;\n\n  const secretjs = await SecretNetworkClient.create({\n    grpcWebUrl,\n    chainId: SECRET_CHAIN_ID,\n    wallet: keplrOfflineSigner,\n    walletAddress: myAddress,\n    encryptionUtils: window.keplr.getEnigmaUtils(SECRET_CHAIN_ID),\n  });\n\n  let obj = {\n    address: myAddress,\n    secretjs,\n  };\n\n  return obj;\n}\n","import Swal from \"sweetalert2\";\n\nvar toastMixin = Swal.mixin({\n  toast: true,\n  icon: \"success\",\n  title: \"General Title\",\n  position: \"top-right\",\n  showConfirmButton: false,\n  timer: 15000,\n  timerProgressBar: true,\n  showCloseButton: true,\n  didOpen: (toast) => {\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n  },\n});\n\nexport default async function Notifications(type, title, message) {\n  let themeColor = \"#136762\";\n  let fontColor = \"#ffffff\";\n\n  toastMixin.fire({\n    title: title,\n    text: message,\n    icon: type,\n    color: fontColor,\n    background: themeColor,\n  });\n}\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon ({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className\n}) {\n  const baseStyle = 'p-3 rounded-full'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className='w-5 h-5' />\n    </div>\n  )\n}\n\nexport default RoundIcon\n"],"sourceRoot":""}