{"version":3,"sources":["assets/img/gift.png","components/Cards/PoolCard.js","utils/demo/useModals.js","pages/UserView.js","pages/UserPoolDetails.js","pages/UserPools.js","assets/img/scrt_logo.png","components/CryptoComponents/client.js","utils/demo/notifications.js","components/RoundIcon.js"],"names":["module","exports","PoolCard","title","value","children","icon","setViewStatus","onClick","event","className","style","cursor","src","logo","alt","useModal","isShowing","setIsShowing","useState","toggle","DepositModal","lazy","UnbondingModal","WithdrawableModal","UserView","isDepositModalShowing","depositToggle","isUnbondModalShowing","unbondToggle","isWithdrawModalShowing","withdrawToggle","isPermit","setisPermit","delegated","setDelegated","withdrawable","setWithdrawable","unbondings","setUnbondings","userInfo","setuserInfo","lotteryInfo","setLotteryInfo","liquidity","setLiquidity","unclaimedRoundsLiq","setUnclaimedRoundsLiq","winningRecords","setWinningRecords","timer","setTimer","days","hours","mins","async","fetchDelegated","secretjs","address","setupKeplr","permitName","permit","JSON","parse","localStorage","getItem","query","compute","queryContract","contractAddress","process","codeHash","with_permit","amount","console","log","balance","fetchUnbondings","now","Date","len","i","vec","length","next_batch_unbonding_time","date","toISOString","slice","replace","unbonding_time","isClaimable","fetchLiquidity","start","end","contract_address","user_info","lottery_info","current_liquidity","round_index","current_round_index","last_claim_rewards_round","starting_round","unclaimed_round_info","date_now","parseInt","is_reward_expired","expiry_date","push","fetchWithdrawable","useEffect","checkPermit","fetchTimer","end_time","date_future","delta","Math","abs","floor","minutes","setTimeout","fetchLotteryInfo","records","end_page","extra","start_page","result_vec","rec","page_size","concat","reverse","fetchUserWinningRecords","background","toFixed","allowedTokens","utils","accessControl","sign","setItem","stringify","fontSize","gift","tx","executeContract","sender","msg","claim_rewards","gasLimit","jsonLog","Notifications","transactionHash","rawLog","e","claimRewardsCallback","disabled","hide","callback","fetchUserStats","price_per_ticket","user_tickets","total_tickets","map","index","key","tickets_used","type","total_rewards","unclaimed_rewards","totalResults","resultsPerPage","onChange","label","batch_index","round","total_amount_won","UserPoolDetails","props","setValue","selectedIndex","onSelect","border","borderRadius","marginBottom","target","UserPools","React","Component","constructor","super","param","this","setState","pool_id","state","bind","render","RoundIcon","MoneyIcon","iconColorClass","bgColorClass","sleep","number","Promise","resolve","window","keplr","getEnigmaUtils","getOfflineSignerOnlyAmino","enable","keplrOfflineSigner","myAddress","getAccounts","SecretNetworkClient","create","grpcWebUrl","chainId","wallet","walletAddress","encryptionUtils","dotenv","path","toastMixin","Swal","mixin","toast","position","showConfirmButton","timerProgressBar","showCloseButton","didOpen","addEventListener","stopTimer","resumeTimer","message","fire","text","color","Icon","cls","classNames"],"mappings":"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","file":"static/js/9.279b4954.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gift.d2784fb5.png\";","import React from \"react\";\nimport { Card, CardBody, Button } from \"@windmill/react-ui\";\nimport logo from \"../../assets/img/scrt_logo.png\"; // with import\n\nimport \"../../main.css\";\nfunction PoolCard({ title, value, children: icon, setViewStatus }) {\n  return (\n    <Card\n      onClick={(event) => setViewStatus(\"scrt\")}\n      className=\"btn\"\n      style={{ cursor: \"pointer\" }}\n    >\n      <CardBody className=\" flex flex-row items-center justify-between dark:bg-primary2 \">\n        <div className=\"flex flex-row \">\n          <img src={logo} alt=\"LOGO Image\" className=\"img-fluid logo-size\" />\n          <p className=\"text-sm  flex items-center font-semibold text-gray-600 dark:text-white\">\n            SCRT\n          </p>\n        </div>\n        <div className=\"flex flex-col items-center justify-between \">\n          <div className=\"mb-2 prize_amount  \">{value}</div>\n          <div className=\"text-lg font-semibold text-gray-700 dark:text-white\">\n            {title}\n          </div>\n        </div>\n        <div>\n          <div className=\"flex flex-row  justify-between\">\n            <div className=\"flex flex-col justify-center\">\n              <div className=\"p-2\">\n                <span className=\"p-2 m-1 date_digit\">0</span>\n                <span className=\"p-2 m-1 date_digit\">0</span>\n              </div>\n              <div className=\"flex justify-center\">\n                <span className=\"date_title\">DAY</span>\n              </div>\n            </div>\n            <div className=\"flex flex-col item-center justify-start\">\n              <div className=\"p-2\">\n                <span className=\"colon\">:</span>\n              </div>\n            </div>\n            <div className=\"flex flex-col justify-center\">\n              <div className=\"p-2\">\n                <span className=\"p-2 m-1 date_digit\">0</span>\n                <span className=\"p-2 m-1 date_digit\">0</span>\n              </div>\n              <div className=\"flex justify-center\">\n                <span className=\"date_title\">HR</span>\n              </div>\n            </div>\n\n            <div className=\"flex flex-col item-center justify-start\">\n              <div className=\"p-2\">\n                <span className=\"colon\">:</span>\n              </div>\n            </div>\n            <div className=\"flex flex-col justify-center\">\n              <div className=\"p-2\">\n                <span className=\"p-2 m-1 date_digit\">0</span>\n                <span className=\"p-2 m-1 date_digit\">0</span>\n              </div>\n              <div className=\"flex justify-center\">\n                <span className=\"date_title\">MIN</span>\n              </div>\n            </div>\n\n            <div className=\"flex flex-col item-center justify-start\">\n              <div className=\"p-2\">\n                <span className=\"colon\">:</span>\n              </div>\n            </div>\n            <div className=\"flex flex-col justify-center\">\n              <div className=\"p-2\">\n                <span className=\"p-2 m-1 date_digit\">5</span>\n                <span className=\"p-2 m-1 date_digit\">0</span>\n              </div>\n              <div className=\"flex justify-center\">\n                <span className=\"date_title\">SEC</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default PoolCard;\n","import { useState } from \"react\";\n\nconst useModal = () => {\n  const [isShowing, setIsShowing] = useState(false);\n\n  function toggle() {\n    setIsShowing(!isShowing);\n  }\n\n  return {\n    isShowing,\n    toggle,\n  };\n};\n\nexport default useModal;\n","import React, { useState, useEffect, lazy } from \"react\";\nimport { Button } from \"@windmill/react-ui\";\nimport Notifications from \"../utils/demo/notifications.js\";\nimport logo from \"../assets/img/scrt_logo.png\"; // with import\nimport useModal from \"../utils/demo/useModals.js\";\nimport gift from \"../assets/img/gift.png\";\nimport { setupKeplr } from \"../components/CryptoComponents/client\";\nimport {\n  TableContainer,\n  Table,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableFooter,\n  Avatar,\n  Pagination,\n  Badge,\n} from \"@windmill/react-ui\";\nimport { TxResponse } from \"secretjs/dist/protobuf_stuff/cosmos/base/abci/v1beta1/abci.js\";\nconst DepositModal = lazy(() => import(\"../modals/DepositModal\"));\nconst UnbondingModal = lazy(() => import(\"../modals/UnbondingModal\"));\nconst WithdrawableModal = lazy(() => import(\"../modals/WithdrawableModal\"));\n\nfunction UserView() {\n  const { isShowing: isDepositModalShowing, toggle: depositToggle } =\n    useModal();\n  const { isShowing: isUnbondModalShowing, toggle: unbondToggle } = useModal();\n  const { isShowing: isWithdrawModalShowing, toggle: withdrawToggle } =\n    useModal();\n\n  const [isPermit, setisPermit] = useState(false);\n  const [delegated, setDelegated] = useState(null);\n  const [withdrawable, setWithdrawable] = useState(null);\n  const [unbondings, setUnbondings] = useState(null);\n  const [userInfo, setuserInfo] = useState(null);\n\n  const [lotteryInfo, setLotteryInfo] = useState(null);\n  const [liquidity, setLiquidity] = useState(null);\n  const [unclaimedRoundsLiq, setUnclaimedRoundsLiq] = useState([]);\n  const [winningRecords, setWinningRecords] = useState([]);\n\n  const [timer, setTimer] = useState({\n    days: \"-\",\n    hours: \"-\",\n    mins: \"-\",\n  });\n\n  useEffect(() => {\n    if (!isPermit) {\n      checkPermit();\n    }\n    if (timer.days == \"-\") {\n      fetchTimer();\n    }\n  });\n\n  useEffect(() => {\n    if (isPermit) {\n      fetchDelegated();\n      fetchUnbondings();\n      fetchWithdrawable();\n      fetchLotteryInfo();\n      fetchLiquidity();\n      fetchUserWinningRecords();\n    }\n  }, [isPermit]);\n\n  async function checkPermit() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = localStorage.getItem(permitName);\n\n    if (permit != null) {\n      setisPermit(true);\n    }\n  }\n\n  async function setPermit() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    const allowedTokens = [contract_address];\n    const permissions = [\"owner\"];\n    const chainId = process.env.REACT_APP_SECRET_CHAIN_ID;\n\n    let permit = await secretjs.utils.accessControl.permit.sign(\n      address,\n      chainId,\n      permitName,\n      allowedTokens,\n      permissions,\n      true\n    );\n    localStorage.setItem(permitName, JSON.stringify(permit));\n\n    setisPermit(true);\n  }\n\n  async function fetchDelegated() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    // now fetch the balance here lol\n    let delegated = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            delegated: {},\n          },\n        },\n      },\n    });\n\n    if (delegated.amount != null) {\n      console.log(typeof delegated.amount);\n      const balance = delegated.amount;\n      setDelegated(balance);\n    } else {\n      setDelegated(0);\n    }\n  }\n\n  async function fetchUnbondings() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    // now fetch the balance here lol\n    let unbondings = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            unbondings: {},\n          },\n        },\n      },\n    });\n\n    const now = new Date();\n\n    if (unbondings.len != 0) {\n      for (let i = 0; i < unbondings.vec.length; i++) {\n        if (unbondings.vec[i].next_batch_unbonding_time != null) {\n          let date = new Date(\n            unbondings.vec[i].next_batch_unbonding_time * 1000\n          );\n          unbondings.vec[i].next_batch_unbonding_time = `${date\n            .toISOString()\n            .slice(0, 19)\n            .replace(\"T\", \" \")} UTC`;\n        }\n        if (unbondings.vec[i].unbonding_time != null) {\n          if (now / 1000 >= unbondings.vec[i].unbonding_time) {\n            unbondings.vec[i].isClaimable = true;\n          } else {\n            unbondings.vec[i].isClaimable = false;\n          }\n          let date = new Date(unbondings.vec[i].unbonding_time * 1000);\n          unbondings.vec[i].unbonding_time = `${date\n            .toISOString()\n            .slice(0, 19)\n            .replace(\"T\", \" \")} UTC`;\n        }\n      }\n      setUnbondings(unbondings.vec);\n    } else {\n      setUnbondings([]);\n    }\n  }\n\n  async function fetchLiquidity() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    let user_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            user_info: {},\n          },\n        },\n      },\n    });\n\n    setuserInfo(user_info);\n\n    let start;\n    let end;\n    let lottery_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        lottery_info: {},\n      },\n    });\n\n    let current_liquidity = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            liquidity: { round_index: lottery_info.current_round_index },\n          },\n        },\n      },\n    });\n\n    console.log(current_liquidity);\n\n    setLiquidity(current_liquidity);\n\n    let current_liq = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            liquidity: { round_index: lottery_info.current_round_index - 1 },\n          },\n        },\n      },\n    });\n\n    if (user_info.last_claim_rewards_round) {\n      start = user_info.last_claim_rewards_round + 1;\n    } else {\n      if (user_info.starting_round) {\n        start = user_info.starting_round;\n      } else {\n        start = lottery_info.current_round_index;\n      }\n    }\n\n    end = lottery_info.current_round_index;\n\n    let unclaimed_round_info = [];\n    for (let i = start; i < end; i++) {\n      let liquidity = await secretjs.query.compute.queryContract({\n        contractAddress: contract_address,\n        codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n        query: {\n          with_permit: {\n            permit,\n            query: {\n              liquidity: { round_index: i },\n            },\n          },\n        },\n      });\n\n      liquidity.round_index = i;\n      let date_now = parseInt(new Date() / 1000);\n\n      liquidity.is_reward_expired =\n        liquidity.expiry_date < date_now ? true : false;\n\n      unclaimed_round_info.push(liquidity);\n    }\n    setUnclaimedRoundsLiq(unclaimed_round_info);\n  }\n\n  async function fetchUserStats() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    let user_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            user_info: {},\n          },\n        },\n      },\n    });\n\n    setuserInfo(user_info);\n    let lottery_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        lottery_info: {},\n      },\n    });\n\n    let current_liquidity = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            liquidity: { round_index: lottery_info.current_round_index },\n          },\n        },\n      },\n    });\n    setLiquidity(current_liquidity);\n  }\n  async function fetchWithdrawable() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    // now fetch the balance here lol\n    let withdrawable = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            withdrawable: {},\n          },\n        },\n      },\n    });\n\n    setWithdrawable(withdrawable.amount);\n  }\n\n  async function fetchLotteryInfo() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    // now fetch the balance here lol\n    let lottery_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        lottery_info: {},\n      },\n    });\n    setLotteryInfo(lottery_info);\n  }\n\n  async function fetchUserWinningRecords() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    // now fetch the balance here lol\n    let records = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            records: {},\n          },\n        },\n      },\n    });\n\n    //fetching last 10 records only\n    let page_number;\n    let page_size = 5;\n    if (records.len > page_size) {\n      let extra = records.len % page_size;\n      let start_page = parseInt(records.len / page_size) - 1;\n      let end_page;\n      if (extra > 0) {\n        end_page = start_page + 1;\n      } else {\n        end_page = start_page;\n      }\n\n      let result_vec = [];\n      for (let i = start_page; i <= end_page; i++) {\n        let rec = await secretjs.query.compute.queryContract({\n          contractAddress: contract_address,\n          codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n          query: {\n            with_permit: {\n              permit,\n              query: {\n                records: { start_page: i, page_size },\n              },\n            },\n          },\n        });\n        result_vec = result_vec.concat(rec.vec);\n      }\n      setWinningRecords(result_vec.reverse());\n      console.log(result_vec);\n    } else {\n      setWinningRecords(records.vec.reverse());\n    }\n\n    // console.log(records.vec);\n  }\n\n  async function claim_rewards() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contractAddress = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n    let codeHash = process.env.REACT_APP_POOL_CONTRACT_HASH;\n\n    try {\n      const tx = await secretjs.tx.compute.executeContract(\n        {\n          sender: address,\n          contractAddress: contractAddress,\n          codeHash: codeHash, // optional but way faster\n          msg: {\n            claim_rewards: {},\n          },\n        },\n        {\n          gasLimit: 240297,\n        }\n      );\n\n      if (tx.jsonLog) {\n        Notifications(\n          \"success\",\n          \"Transaction sent!\",\n          `Successfully claim rewards\n        Txhash: ${tx.transactionHash}`\n        );\n      } else {\n        Notifications(\"error\", \"ERROR\", tx.rawLog);\n      }\n    } catch (e) {\n      Notifications(\"error\", \"ERROR\", e);\n    }\n\n    await claimRewardsCallback();\n  }\n\n  async function fetchTimer() {\n    const { secretjs, address } = await setupKeplr();\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    // now fetch the balance here lol\n    let lottery_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        lottery_info: {},\n      },\n    });\n\n    setLotteryInfo(lottery_info);\n\n    let date_now = parseInt(new Date() / 1000);\n\n    if (date_now < lottery_info.end_time) {\n      let date_future = lottery_info.end_time;\n      // get total seconds between the times\n      var delta = Math.abs(date_future - date_now);\n\n      // calculate (and subtract) whole days\n      var days = Math.floor(delta / 86400);\n      delta -= days * 86400;\n\n      // calculate (and subtract) whole hours\n      var hours = Math.floor(delta / 3600) % 24;\n      delta -= hours * 3600;\n\n      // calculate (and subtract) whole minutes\n      var minutes = Math.floor(delta / 60) % 60;\n      delta -= minutes * 60;\n\n      // what's left is seconds\n      // var seconds = delta % 60;\n\n      let timer = { days: days, hours: hours, mins: minutes };\n\n      setTimer(timer);\n    } else {\n      let timer = { days: 0, hours: 0, mins: 0 };\n\n      setTimer(timer);\n    }\n    setTimeout(() => {\n      fetchTimer();\n    }, 60 * 1000);\n  }\n\n  async function depositCallback() {\n    await fetchDelegated();\n    await fetchUserStats();\n  }\n\n  async function unbondingCallback() {\n    await fetchDelegated();\n    await fetchUnbondings();\n  }\n\n  async function withdrawCallback() {\n    await fetchWithdrawable();\n    await fetchUnbondings();\n  }\n\n  async function claimRewardsCallback() {\n    await fetchLiquidity();\n  }\n\n  return (\n    <div>\n      <div className=\" grid grid-cols-7 mt-4 grid-parent \">\n        <div\n          className=\"col-span-2 p-4 account_deposit_card mr-1\"\n          style={{ background: \"linear-gradient(to right,#9A47B9, #4D2D9F)\" }}\n        >\n          <div className=\"flex flex-row  account_deposit_title\">Deposits</div>\n          {!isPermit ? (\n            <div\n              className=\"flex flex-row p-3 items-center justify-start\"\n              style={{ cursor: \"pointer\" }}\n              onClick={setPermit}\n            >\n              <span style={{ fontSize: \"20px\" }}>&#128269;</span>\n\n              <span className=\"createViewingKey p-4\">\n                CREATE VIEWING PERMIT\n              </span>\n            </div>\n          ) : (\n            <div>\n              {\" \"}\n              {delegated == null ? (\n                <div>Loading...</div>\n              ) : (\n                <div className=\"flex flex-row justify-start items-end\">\n                  <span className=\"account_deposit_amount mr-1\">\n                    {(delegated / 1e6).toFixed(2)}\n                    <span className=\"account_deposit_denom  \">SCRT</span>\n                  </span>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"col-span-5 bg-primary2 account_deposit_card  gap-4 p-4\">\n          <div className=\"flex flex-row h-full w-full justify-between \">\n            <div className=\"flex flex-row items-center justify-center \">\n              <span className=\" align-self-center d-flex justify-content-end\">\n                <img\n                  src={logo}\n                  alt=\"LOGO Image\"\n                  className=\"img-fluid logo-size\"\n                />\n              </span>\n\n              <span className=\" ml-4 \">\n                <div className=\"account_token_title\">SCRT</div>\n              </span>\n            </div>\n\n            <div className=\"flex flex-col w-full items-end justify-between \">\n              <div>\n                <div className=\"flex flex-row items-center justify-start \">\n                  <span className=\"\">\n                    <img\n                      src={gift}\n                      alt=\"LOGO Image\"\n                      className=\"img-fluid logo-size\"\n                    />\n                  </span>\n\n                  <span className=\" ml-4 \">\n                    <div className=\"account_time_font\">\n                      in {timer.days}d ,{timer.hours}h ,{timer.mins}m{\" \"}\n                    </div>\n                  </span>\n                </div>\n              </div>\n              <div className=\"flex flex-row w-full items-center justify-center\">\n                <div className=\"btn account_reduce_stakes_withdraw_button   m-1 self-center\">\n                  <Button\n                    className=\"btn account_reduce_stakes_withdraw_button  self-center\"\n                    onClick={claim_rewards}\n                  >\n                    Claim Rewards\n                  </Button>\n                </div>\n                <div className=\"btn account_reduce_stakes_withdraw_button   m-1\">\n                  <Button\n                    className=\"btn account_reduce_stakes_withdraw_button  self-center\"\n                    disabled={\n                      withdrawable == null || withdrawable == 0 ? true : false\n                    }\n                    onClick={withdrawToggle}\n                  >\n                    Withdraw\n                  </Button>\n                  <WithdrawableModal\n                    isShowing={isWithdrawModalShowing}\n                    hide={withdrawToggle}\n                    callback={withdrawCallback}\n                    withdrawable={withdrawable}\n                  />\n                </div>\n                <div className=\"btn account_reduce_stakes_withdraw_button   m-1\">\n                  <Button\n                    className=\"btn account_reduce_stakes_withdraw_button  self-center\"\n                    onClick={unbondToggle}\n                    disabled={\n                      delegated == null || delegated == 0 ? true : false\n                    }\n                  >\n                    Unbond\n                  </Button>\n                  <UnbondingModal\n                    isShowing={isUnbondModalShowing}\n                    hide={unbondToggle}\n                    callback={unbondingCallback}\n                    delegated={delegated}\n                  />\n                </div>\n                <div className=\"btn account_reduce_stakes_withdraw_button   m-1\">\n                  <Button\n                    className=\"btn account_deposit_button  self-center\"\n                    onClick={depositToggle}\n                  >\n                    Deposit\n                  </Button>\n                  <DepositModal\n                    isShowing={isDepositModalShowing}\n                    hide={depositToggle}\n                    callback={depositCallback}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"flex flex-col mt-6 p-6 bg-primary2 text-white account_deposit_card\">\n        <div className=\" text-2xl \">User Stats</div>\n        <div className=\" border\"></div>\n\n        <TableContainer>\n          <Table>\n            <TableBody>\n              <TableRow className=\"bg-primary2\">\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"font-semibold ml-2\">\n                      Amount Withdrawable\n                    </span>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm justify-self-end\">\n                    {(withdrawable / 1e6).toFixed(2)} SCRT\n                  </span>\n                </TableCell>\n              </TableRow>\n              <TableRow className=\"bg-primary2\">\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"font-semibold ml-2\">Ticket Price</span>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm justify-self-end\">\n                    {lotteryInfo\n                      ? (lotteryInfo.price_per_ticket / 1e6).toFixed(2)\n                      : 0}{\" \"}\n                    SCRT\n                  </span>\n                </TableCell>\n              </TableRow>\n              <TableRow className=\"bg-primary2\">\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"font-semibold ml-2\">\n                      User Tickets / Total Tickets\n                    </span>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm justify-self-end\">\n                    {liquidity ? liquidity.user_tickets : 0} /{\" \"}\n                    {liquidity ? liquidity.total_tickets : 0} {\" (\"}\n                    {liquidity\n                      ? (\n                          ((liquidity.user_tickets\n                            ? liquidity.user_tickets\n                            : 0) /\n                            (liquidity.total_tickets != 0\n                              ? liquidity.total_tickets\n                              : 1)) *\n                          100\n                        ).toFixed(2)\n                      : 0}\n                    %{\") \"}\n                  </span>\n                </TableCell>\n              </TableRow>\n              <TableRow className=\"bg-primary2\">\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"font-semibold ml-2\">\n                      Last round claimed\n                    </span>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm justify-self-end\">\n                    {userInfo\n                      ? userInfo.last_claim_rewards_round\n                        ? userInfo.last_claim_rewards_round\n                        : \"-\"\n                      : 0}\n                  </span>\n                </TableCell>\n              </TableRow>\n              <TableRow className=\"bg-primary2\">\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"font-semibold ml-2\">Current Round</span>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm justify-self-end\">\n                    {lotteryInfo ? lotteryInfo.current_round_index : 0}\n                  </span>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n\n      <div className=\"flex flex-col mt-6 p-6 bg-primary2 text-white account_deposit_card\">\n        <div className=\" text-2xl \">User Liquidity</div>\n        <div className=\" border\"></div>\n        <div className=\"flex flex-row justify-between\">\n          <TableContainer>\n            <Table>\n              <TableHeader>\n                <TableRow className=\"bg-primary2 items-center justify-center text-white\">\n                  <TableCell>Round Index</TableCell>\n                  <TableCell>Total Tickets</TableCell>\n                  <TableCell>Tickets Used</TableCell>\n                  <TableCell>Rewards Expired ?</TableCell>\n                  <TableCell>Total Rewards</TableCell>\n                  <TableCell>Unclaimed Rewards</TableCell>\n                </TableRow>\n              </TableHeader>\n              {unclaimedRoundsLiq ? (\n                <TableBody>\n                  {unclaimedRoundsLiq.map((value, index) => {\n                    return (\n                      <TableRow key={index} className=\"bg-primary2\">\n                        <TableCell>\n                          <span className=\"text-sm\">{value.round_index}</span>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {value.user_tickets}\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {value.tickets_used}\n                            </span>\n                          </div>\n                        </TableCell>\n\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            {value.is_reward_expired ? (\n                              <Badge type=\"success\">Yes</Badge>\n                            ) : (\n                              <Badge type=\"danger\">NO</Badge>\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {(value.total_rewards / 1e6).toFixed(6)} SCRT\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {(value.unclaimed_rewards / 1e6).toFixed(6)} SCRT\n                            </span>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              ) : (\n                <TableBody></TableBody>\n              )}\n            </Table>\n            {(unclaimedRoundsLiq ? unclaimedRoundsLiq.length : 0) > 5 ? (\n              <TableFooter>\n                <Pagination\n                  totalResults={\n                    unclaimedRoundsLiq ? unclaimedRoundsLiq.length : 0\n                  }\n                  resultsPerPage={5}\n                  onChange={() => {}}\n                  label=\"Table navigation\"\n                />\n              </TableFooter>\n            ) : (\n              <div></div>\n            )}\n          </TableContainer>\n        </div>\n      </div>\n\n      <div className=\"flex flex-col mt-6 p-6 bg-primary2 text-white account_deposit_card\">\n        <div className=\" text-2xl \">Unbondings</div>\n        <div className=\" border\"></div>\n        <div className=\"flex flex-row justify-between\">\n          <TableContainer>\n            <Table>\n              <TableHeader>\n                <TableRow className=\"bg-primary2 items-center justify-center text-white\">\n                  <TableCell>Amount</TableCell>\n                  <TableCell>Unbonding Batch Index</TableCell>\n                  <TableCell>Claimable ?</TableCell>\n                  <TableCell>Batch Unbond Time</TableCell>\n                  <TableCell>Unbonding Time</TableCell>\n                </TableRow>\n              </TableHeader>\n              {unbondings ? (\n                <TableBody>\n                  {unbondings.map((value, index) => {\n                    return (\n                      <TableRow key={index} className=\"bg-primary2\">\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(value.amount / 1e6).toFixed(2)} SCRT\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {value.batch_index}\n                            </span>\n                          </div>\n                        </TableCell>\n\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            {value.isClaimable ? (\n                              <Badge type=\"success\">Yes</Badge>\n                            ) : (\n                              <Badge type=\"danger\">NO</Badge>\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {value.next_batch_unbonding_time\n                                ? value.next_batch_unbonding_time\n                                : \"Already Unbonded\"}\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {value.unbonding_time\n                                ? value.unbonding_time\n                                : \"-\"}\n                            </span>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              ) : (\n                <TableBody></TableBody>\n              )}\n            </Table>\n            {(unbondings ? unbondings.length : 0) >= 5 ? (\n              <TableFooter>\n                <Pagination\n                  totalResults={unbondings.length}\n                  resultsPerPage={5}\n                  onChange={() => {}}\n                  label=\"Table navigation\"\n                />\n              </TableFooter>\n            ) : (\n              <div></div>\n            )}\n          </TableContainer>\n        </div>\n      </div>\n      <div className=\"flex flex-col mt-6 p-6 bg-primary2 text-white account_deposit_card\">\n        <div className=\" text-2xl \">User Winnings</div>\n        <div className=\" border\"></div>\n        <div className=\"flex flex-row justify-between\">\n          <TableContainer>\n            <Table>\n              <TableHeader>\n                <TableRow className=\"bg-primary2 items-center justify-center text-white\">\n                  <TableCell>Round</TableCell>\n                  <TableCell>Total Winnings</TableCell>\n                  <TableCell>Tikcets</TableCell>\n                  <TableCell>Ticket Price</TableCell>\n                  <TableCell>Details</TableCell>\n                </TableRow>\n              </TableHeader>\n              {winningRecords ? (\n                <TableBody>\n                  {winningRecords.map((value, index) => {\n                    return (\n                      <TableRow key={index} className=\"bg-primary2\">\n                        <TableCell>\n                          <span className=\"text-sm\">{value.round}</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(value.total_amount_won / 1e6).toFixed(2)} SCRT\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(value.liquidity / 1e6).toFixed(2)}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(value.liquidity / 1e6).toFixed(2)} SCRT\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">Details</span>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              ) : (\n                <TableBody></TableBody>\n              )}\n            </Table>\n            {(winningRecords ? winningRecords.length : 0) > 5 ? (\n              <TableFooter>\n                <Pagination\n                  totalResults={winningRecords ? winningRecords.length : 0}\n                  resultsPerPage={5}\n                  onChange={() => {}}\n                  label=\"Table navigation\"\n                />\n              </TableFooter>\n            ) : (\n              <div></div>\n            )}\n          </TableContainer>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserView;\n","import React, { useState } from 'react'\n\nimport PageTitle from '../components/Typography/PageTitle'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\nimport UserView from './UserView'\nfunction UserPoolDetails (props) {\n  const [value, setValue] = useState(0)\n\n  return (\n    <div>\n      <div>\n        <button\n          onClick={event => props.setViewStatus(null)}\n          className='text-white hover:text-gray-400'\n        >\n          Go Back\n        </button>\n        <Tabs selectedIndex={value} onSelect={index => console.log(index)}>\n          <div className='dropMenu flex justify-end'>\n            <select\n              className=' tabSelect  w-1/4 text-center h-10 text-m dark:text-gray-200 focus:outline-none focus:border-blue-400 dark:border-gray-600 dark:bg-gray-700 focus:shadow-outline-purple dark:focus:shadow-outline-gray dark:focus:border-gray-600 form-number leading-5'\n              style={{\n                border: '2px solid #ac94fa ',\n                borderRadius: '5px',\n                marginBottom: '2px'\n              }}\n              onChange={e => {\n                setValue(e.target.selectedIndex)\n              }}\n            >\n              <option value={1}>USER VIEW </option>\n              <option value={2}>POOL STATS</option>\n            </select>\n          </div>\n\n          <TabList className=''>\n            <Tab onClick={() => setValue(0)}></Tab>\n            <Tab onClick={() => setValue(1)}></Tab>\n          </TabList>\n\n          <div className='Panel'>\n            <TabPanel>\n              <div className='text-sm text-gray-600 dark:text-gray-400'>\n                <UserView />\n              </div>\n            </TabPanel>\n            <TabPanel>\n              <div className='text-sm text-gray-600 dark:text-gray-400'>\n                POOL STATS\n              </div>\n            </TabPanel>\n          </div>\n        </Tabs>\n      </div>\n    </div>\n  )\n}\n\nexport default UserPoolDetails\n","import React from \"react\";\n\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport PoolCard from \"../components/Cards/PoolCard\";\nimport RoundIcon from \"../components/RoundIcon\";\nimport { ChatIcon, CartIcon, MoneyIcon, PeopleIcon } from \"../icons\";\nimport UserPoolDetails from \"./UserPoolDetails\";\nimport logo from \"../assets/img/scrt_logo.png\"; // with import\n\nclass UserPools extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pool_id: null,\n    };\n    this.setViewStatus = this.setViewStatus.bind(this);\n  }\n  setViewStatus = (param) => {\n    this.setState({ pool_id: param });\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.state.pool_id ? (\n          <div\n            className=\"grid gap-6 mt-8 mb-8 md:grid-cols-1 xl:grid-cols-1\"\n            onClick={(event) => this.setViewStatus(\"scrt\")}\n          >\n            <PoolCard\n              title=\"Prize\"\n              value=\"$50,000\"\n              setViewStatus={this.setViewStatus}\n            >\n              <RoundIcon\n                icon={MoneyIcon}\n                iconColorClass=\"text-blue-500 dark:text-blue-100\"\n                bgColorClass=\"bg-purple-100 dark:bg-purple-500\"\n                className=\"mr-4\"\n              />\n            </PoolCard>\n          </div>\n        ) : (\n          <div>\n            <UserPoolDetails setViewStatus={this.setViewStatus} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default UserPools;\n","module.exports = __webpack_public_path__ + \"static/media/scrt_logo.0fe47b33.png\";","import { SecretNetworkClient } from \"secretjs\";\nimport * as dotenv from \"dotenv\"; // see https://github.com/motdotla/dotenv#how-do-i-use-dotenv-with-import\ndotenv.config({ path: \"../../../.env\" });\n\nexport async function setupKeplr() {\n  const sleep = (number) =>\n    new Promise((resolve) => setTimeout(resolve, number));\n  const SECRET_REST_API = process.env.REACT_APP_SECRET_REST_URL;\n\n  const SECRET_CHAIN_ID = process.env.REACT_APP_SECRET_CHAIN_ID;\n\n  while (\n    !window.keplr ||\n    !window.getEnigmaUtils ||\n    !window.getOfflineSignerOnlyAmino\n  ) {\n    await sleep(50);\n  }\n\n  await window.keplr.enable(SECRET_CHAIN_ID);\n  const keplrOfflineSigner =\n    window.keplr.getOfflineSignerOnlyAmino(SECRET_CHAIN_ID);\n\n  const [{ address: myAddress }] = await keplrOfflineSigner.getAccounts();\n\n  const grpcWebUrl = SECRET_REST_API;\n\n  const secretjs = await SecretNetworkClient.create({\n    grpcWebUrl,\n    chainId: SECRET_CHAIN_ID,\n    wallet: keplrOfflineSigner,\n    walletAddress: myAddress,\n    encryptionUtils: window.keplr.getEnigmaUtils(SECRET_CHAIN_ID),\n  });\n\n  let obj = {\n    address: myAddress,\n    secretjs,\n  };\n\n  return obj;\n}\n","import Swal from \"sweetalert2\";\n\nvar toastMixin = Swal.mixin({\n  toast: true,\n  icon: \"success\",\n  title: \"General Title\",\n  position: \"top-right\",\n  showConfirmButton: false,\n  timer: 15000,\n  timerProgressBar: true,\n  showCloseButton: true,\n  didOpen: (toast) => {\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n  },\n});\n\nexport default async function Notifications(type, title, message) {\n  let themeColor = \"#136762\";\n  let fontColor = \"#ffffff\";\n\n  toastMixin.fire({\n    title: title,\n    text: message,\n    icon: type,\n    color: fontColor,\n    background: themeColor,\n  });\n}\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon ({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className\n}) {\n  const baseStyle = 'p-3 rounded-full'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className='w-5 h-5' />\n    </div>\n  )\n}\n\nexport default RoundIcon\n"],"sourceRoot":""}