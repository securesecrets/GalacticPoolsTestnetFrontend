{"version":3,"sources":["components/Cards/PoolCard.js","modals/WinningRecordModal.js","pages/UserView.js","pages/UserPoolDetails.js","pages/UserPools.js","components/CryptoComponents/client.js","assets/img/scrt_logo.png","utils/demo/notifications.js","components/RoundIcon.js","utils/demo/useModals.js","assets/img/gift.png"],"names":["PoolCard","title","value","children","icon","setViewStatus","end_time","duration","timer","setTimer","useState","day1","day2","hour1","hour2","min1","min2","sec1","sec2","endTime","setEndTime","Date","now","wallet","setWallet","secretjs","address","currentRewards","setCurrentRewards","useEffect","isMounted","async","setupKeplr","setupKeplrfun","price","current_rewards","query","compute","queryContract","contractAddress","process","codeHash","date_now","parseInt","axios","get","then","response","data","usd","time_spend","prize","Math","ceil","rewards","calculatePrize","fetchTimer","date_future","delta","abs","days","floor","hours","minutes","seconds","setTimeout","onClick","event","className","style","cursor","src","logo","alt","customStyles","content","top","left","right","bottom","marginRight","width","height","transform","backgroundColor","borderRadius","WinningRecordModal","props","clearfields","hide","WinningModal","isShowing","rewardsPerTier","ReactDOM","createPortal","Fragment","isOpen","onRequestClose","contentLabel","ariaHideApp","type","aria-label","tier_0","num_of_rewards_claimed","toFixed","reward_per_match","tier_1","tier_2","tier_3","tier_4","tier_5","document","body","DepositModal","lazy","UnbondingModal","WithdrawableModal","UserView","isDepositModalShowing","toggle","depositToggle","useModal","isUnbondModalShowing","unbondToggle","isWithdrawModalShowing","withdrawToggle","isWinningRecordsShowing","winningRecordsToggle","isPermit","setisPermit","delegated","setDelegated","withdrawable","setWithdrawable","unbondings","setUnbondings","userInfo","setuserInfo","lotteryInfo","setLotteryInfo","liquidity","setLiquidity","unclaimedRoundsLiq","setUnclaimedRoundsLiq","winningRecords","setWinningRecords","selectedWinningRecord","setSelectedWinningRecord","mins","fetchDelegated","permitName","permit","JSON","parse","localStorage","getItem","with_permit","amount","balance","fetchUnbondings","len","i","vec","length","next_batch_unbonding_time","date","toISOString","slice","replace","unbonding_time","isClaimable","fetchLiquidity","start","end","contract_address","user_info","lottery_info","round","current_liquidity","round_index","current_round_index","last_claim_rewards_round","starting_round","unclaimed_round_info","is_reward_expired","expiry_date","push","fetchWithdrawable","fetchUserWinningRecords","records","end_page","extra","start_page","result_vec","rec","page_size","concat","reverse","checkPermit","fetchLotteryInfo","pageTable1","setPageTable1","pageTable2","setPageTable2","pageTable3","setPageTable3","dataTable1","setDataTable1","dataTable2","setDataTable2","dataTable3","setDataTable3","onPageChangeTable2","p","background","allowedTokens","utils","accessControl","sign","setItem","stringify","fontSize","gift","tx","executeContract","sender","msg","claim_rewards","gasLimit","jsonLog","Notifications","transactionHash","rawLog","e","claimRewardsCallback","disabled","callback","fetchUserStats","ticket_price","user_tickets","total_tickets","map","index","key","tickets_used","total_rewards","unclaimed_rewards","totalResults","resultsPerPage","onChange","label","batch_index","total_amount_won","tickets","winningRecordsCallback","record","rewards_per_tier","UserPoolDetails","setValue","UserPools","poolId","setPoolId","RoundIcon","MoneyIcon","iconColorClass","bgColorClass","sleep","number","Promise","resolve","window","keplr","getEnigmaUtils","getOfflineSignerOnlyAmino","enable","keplrOfflineSigner","myAddress","getAccounts","SecretNetworkClient","create","grpcWebUrl","chainId","walletAddress","encryptionUtils","dotenv","path","module","exports","toastMixin","Swal","mixin","toast","position","showConfirmButton","timerProgressBar","showCloseButton","didOpen","addEventListener","stopTimer","resumeTimer","message","fire","text","color","Icon","cls","classNames","setIsShowing"],"mappings":"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","file":"static/js/9.d9e1740d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, CardBody } from \"@windmill/react-ui\";\nimport logo from \"../../assets/img/scrt_logo.png\"; // with import\nimport { setupKeplr } from \"../CryptoComponents/client\";\nimport axios from \"axios\";\n\nimport \"../../main.css\";\nfunction PoolCard({\n  title,\n  value,\n  children: icon,\n  setViewStatus,\n  end_time,\n  duration,\n}) {\n  const [timer, setTimer] = useState({\n    day1: 0,\n    day2: 0,\n    hour1: 0,\n    hour2: 0,\n    min1: 0,\n    min2: 0,\n    sec1: 0,\n    sec2: 0,\n  });\n  let [endTime, setEndTime] = useState(Date.now() / 1000);\n  let [wallet, setWallet] = useState({ secretjs: null, address: null });\n  let [currentRewards, setCurrentRewards] = useState(\"$ 0\");\n\n  useEffect(() => {\n    let isMounted = true;\n    if (wallet.secretjs == null || wallet.address == null) {\n      if (isMounted) {\n        setupKeplrfun();\n      }\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [wallet]);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (wallet.secretjs != null || wallet.address != null) {\n      if (isMounted) {\n        calculatePrize();\n      }\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [duration]);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (isMounted) {\n      fetchTimer();\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [end_time]);\n\n  function fetchTimer() {\n    let date_now = parseInt(new Date() / 1000);\n\n    if (date_now < end_time) {\n      let date_future = end_time;\n      // get total seconds between the times\n      var delta = Math.abs(date_future - date_now);\n\n      // calculate (and subtract) whole days\n      var days = Math.floor(delta / 86400);\n      let day1 = Math.floor(days / 10);\n      let day2 = Math.floor(days % 10);\n\n      delta -= days * 86400;\n\n      // calculate (and subtract) whole hours\n      var hours = Math.floor(delta / 3600) % 24;\n      let hour1 = Math.floor(hours / 10);\n      let hour2 = Math.floor(hours % 10);\n      delta -= hours * 3600;\n\n      // calculate (and subtract) whole minutes\n      var minutes = Math.floor(delta / 60) % 60;\n      let min1 = Math.floor(minutes / 10);\n      let min2 = Math.floor(minutes % 10);\n      delta -= minutes * 60;\n\n      // what's left is seconds\n      var seconds = delta % 60;\n      let sec1 = Math.floor(seconds / 10);\n      let sec2 = Math.floor(seconds % 10);\n      let timer = {\n        day1,\n        day2,\n        hour1,\n        hour2,\n        min1,\n        min2,\n        sec1,\n        sec2,\n      };\n\n      setTimer(timer);\n    }\n    setTimeout(() => {\n      fetchTimer();\n    }, 1 * 1000);\n  }\n\n  async function setupKeplrfun() {\n    const { secretjs, address } = await setupKeplr();\n    setWallet({ secretjs, address });\n  }\n\n  async function calculatePrize() {\n    const { secretjs, address } = wallet;\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    // now fetch the balance here lol\n    let current_rewards = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        current_rewards: {},\n      },\n    });\n    // current_rewards.amount = 4000;\n\n    let date_now = parseInt(new Date() / 1000);\n    let price;\n\n    await axios\n      .get(\n        \"https://api.coingecko.com/api/v3/simple/price?ids=secret&vs_currencies=usd\"\n      )\n      .then((response) => (price = response.data[\"secret\"].usd));\n\n    if (date_now < end_time) {\n      let time_spend = duration - (end_time - date_now);\n\n      let prize = Math.ceil(\n        (((current_rewards.rewards / 1e6) * duration) / time_spend) * price\n      );\n      setCurrentRewards(`$ ${prize}`);\n    } else {\n      let prize = Math.ceil((current_rewards.rewards / 1e6) * price);\n\n      setCurrentRewards(`$ ${prize}`);\n    }\n  }\n\n  return (\n    <Card\n      onClick={(event) => setViewStatus(\"scrt\")}\n      className=\"btn\"\n      style={{ cursor: \"pointer\" }}\n    >\n      <CardBody className=\" flex flex-row items-center justify-between dark:bg-primary2 \">\n        <div className=\"flex flex-row \">\n          <img src={logo} alt=\"LOGO Image\" className=\"img-fluid logo-size\" />\n          <p className=\"text-sm  flex items-center font-semibold text-gray-600 dark:text-white\">\n            SCRT\n          </p>\n        </div>\n        <div className=\"flex flex-col items-center justify-between \">\n          <div className=\"mb-2 prize_amount  \">{currentRewards}</div>\n          <div className=\"text-lg font-semibold text-gray-700 dark:text-white\">\n            {title}\n          </div>\n        </div>\n        <div>\n          <div className=\"flex flex-row  justify-between\">\n            <div className=\"flex flex-col justify-center\">\n              <div className=\"p-2\">\n                <span className=\"p-2 m-1 date_digit\">{timer.day1}</span>\n                <span className=\"p-2 m-1 date_digit\">{timer.day2}</span>\n              </div>\n              <div className=\"flex justify-center\">\n                <span className=\"date_title\">DAY</span>\n              </div>\n            </div>\n            <div className=\"flex flex-col item-center justify-start\">\n              <div className=\"p-2\">\n                <span className=\"colon\">:</span>\n              </div>\n            </div>\n            <div className=\"flex flex-col justify-center\">\n              <div className=\"p-2\">\n                <span className=\"p-2 m-1 date_digit\">{timer.hour1}</span>\n                <span className=\"p-2 m-1 date_digit\">{timer.hour2}</span>\n              </div>\n              <div className=\"flex justify-center\">\n                <span className=\"date_title\">HR</span>\n              </div>\n            </div>\n\n            <div className=\"flex flex-col item-center justify-start\">\n              <div className=\"p-2\">\n                <span className=\"colon\">:</span>\n              </div>\n            </div>\n            <div className=\"flex flex-col justify-center\">\n              <div className=\"p-2\">\n                <span className=\"p-2 m-1 date_digit\">{timer.min1}</span>\n                <span className=\"p-2 m-1 date_digit\">{timer.min2}</span>\n              </div>\n              <div className=\"flex justify-center\">\n                <span className=\"date_title\">MIN</span>\n              </div>\n            </div>\n\n            <div className=\"flex flex-col item-center justify-start\">\n              <div className=\"p-2\">\n                <span className=\"colon\">:</span>\n              </div>\n            </div>\n            <div className=\"flex flex-col justify-center\">\n              <div className=\"p-2\">\n                <span className=\"p-2 m-1 date_digit\">{timer.sec1}</span>\n                <span className=\"p-2 m-1 date_digit\">{timer.sec2}</span>\n              </div>\n              <div className=\"flex justify-center\">\n                <span className=\"date_title\">SEC</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default PoolCard;\n","import React from \"react\";\nimport Modal from \"react-modal\";\n\nimport ReactDOM from \"react-dom\";\nimport {\n  TableContainer,\n  Table,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableCell,\n} from \"@windmill/react-ui\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    width: \"35%\",\n    height: \"40%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"#0f4d4a\",\n    borderRadius: \"1%\",\n    // padding: \"2%\",\n  },\n};\n\nfunction WinningRecordModal(props) {\n  async function clearfields() {\n    props.hide();\n  }\n  const WinningModal = ({ isShowing, hide, rewardsPerTier }) =>\n    isShowing\n      ? ReactDOM.createPortal(\n          <React.Fragment>\n            <Modal\n              isOpen={isShowing}\n              onRequestClose={hide}\n              contentLabel=\"Example Modal\"\n              style={customStyles}\n              ariaHideApp={false}\n            >\n              <div className=\"flex flex-col h-full justify-between\">\n                <div>\n                  <div className=\"flex flex-row justify-between items-center\">\n                    <div className=\"\">\n                      <span className=\"deposit-modal-heading\">\n                        Winning Record\n                      </span>\n                    </div>\n                    <div className=\"btn-close white\">\n                      <button\n                        type=\"Button\"\n                        className=\"btn-close white\"\n                        aria-label=\"Close\"\n                        onClick={clearfields}\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n                <TableContainer>\n                  <Table>\n                    <TableHeader>\n                      <TableRow className=\"bg-primary2 items-center justify-between text-white\">\n                        <TableCell>Tier</TableCell>\n                        <TableCell>Total Winnings</TableCell>\n                        <TableCell>Winnings Per Match</TableCell>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      <TableRow className=\"bg-primary2\">\n                        <TableCell>\n                          <span className=\"text-sm\">0</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(\n                              rewardsPerTier.tier_0.num_of_rewards_claimed / 1e6\n                            ).toFixed(6)}{\" \"}\n                            SCRT\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(\n                              rewardsPerTier.tier_0.reward_per_match / 1e6\n                            ).toFixed(6)}{\" \"}\n                            SCRT\n                          </span>\n                        </TableCell>\n                      </TableRow>\n                      <TableRow className=\"bg-primary2\">\n                        <TableCell>\n                          <span className=\"text-sm\">1</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(\n                              rewardsPerTier.tier_1.num_of_rewards_claimed / 1e6\n                            ).toFixed(6)}{\" \"}\n                            SCRT\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(\n                              rewardsPerTier.tier_1.reward_per_match / 1e6\n                            ).toFixed(6)}{\" \"}\n                            SCRT\n                          </span>\n                        </TableCell>\n                      </TableRow>\n                      <TableRow className=\"bg-primary2\">\n                        <TableCell>\n                          <span className=\"text-sm\">2</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(\n                              rewardsPerTier.tier_2.num_of_rewards_claimed / 1e6\n                            ).toFixed(6)}{\" \"}\n                            SCRT\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(\n                              rewardsPerTier.tier_2.reward_per_match / 1e6\n                            ).toFixed(6)}{\" \"}\n                            SCRT\n                          </span>\n                        </TableCell>\n                      </TableRow>\n                      <TableRow className=\"bg-primary2\">\n                        <TableCell>\n                          <span className=\"text-sm\">3</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(\n                              rewardsPerTier.tier_3.num_of_rewards_claimed / 1e6\n                            ).toFixed(6)}{\" \"}\n                            SCRT\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(\n                              rewardsPerTier.tier_3.reward_per_match / 1e6\n                            ).toFixed(6)}{\" \"}\n                            SCRT\n                          </span>\n                        </TableCell>\n                      </TableRow>\n                      <TableRow className=\"bg-primary2\">\n                        <TableCell>\n                          <span className=\"text-sm\">4</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(\n                              rewardsPerTier.tier_4.num_of_rewards_claimed / 1e6\n                            ).toFixed(6)}{\" \"}\n                            SCRT\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(\n                              rewardsPerTier.tier_4.reward_per_match / 1e6\n                            ).toFixed(6)}{\" \"}\n                            SCRT\n                          </span>\n                        </TableCell>\n                      </TableRow>\n                      <TableRow className=\"bg-primary2\">\n                        <TableCell>\n                          <span className=\"text-sm\">5</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(\n                              rewardsPerTier.tier_5.num_of_rewards_claimed / 1e6\n                            ).toFixed(6)}{\" \"}\n                            SCRT\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(\n                              rewardsPerTier.tier_5.reward_per_match / 1e6\n                            ).toFixed(6)}{\" \"}\n                            SCRT\n                          </span>\n                        </TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </div>\n            </Modal>\n          </React.Fragment>,\n          document.body\n        )\n      : null;\n  return (\n    <WinningModal\n      isShowing={props.isShowing}\n      hide={props.hide}\n      rewardsPerTier={props.rewardsPerTier}\n    />\n  );\n}\n\nexport default WinningRecordModal;\n","import React, { useState, useEffect, lazy } from \"react\";\nimport { Button } from \"@windmill/react-ui\";\nimport Notifications from \"../utils/demo/notifications.js\";\nimport logo from \"../assets/img/scrt_logo.png\"; // with import\nimport useModal from \"../utils/demo/useModals.js\";\nimport gift from \"../assets/img/gift.png\";\nimport { setupKeplr } from \"../components/CryptoComponents/client\";\nimport {\n  TableContainer,\n  Table,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableFooter,\n  Pagination,\n  Badge,\n} from \"@windmill/react-ui\";\nimport WinningRecordModal from \"../modals/WinningRecordModal.js\";\nconst DepositModal = lazy(() => import(\"../modals/DepositModal\"));\nconst UnbondingModal = lazy(() => import(\"../modals/UnbondingModal\"));\nconst WithdrawableModal = lazy(() => import(\"../modals/WithdrawableModal\"));\n\nfunction UserView() {\n  const { isShowing: isDepositModalShowing, toggle: depositToggle } =\n    useModal();\n  const { isShowing: isUnbondModalShowing, toggle: unbondToggle } = useModal();\n  const { isShowing: isWithdrawModalShowing, toggle: withdrawToggle } =\n    useModal();\n  const { isShowing: isWinningRecordsShowing, toggle: winningRecordsToggle } =\n    useModal();\n\n  const [isPermit, setisPermit] = useState(false);\n  const [delegated, setDelegated] = useState(null);\n  const [withdrawable, setWithdrawable] = useState(null);\n  const [unbondings, setUnbondings] = useState([]);\n  const [userInfo, setuserInfo] = useState(null);\n\n  const [lotteryInfo, setLotteryInfo] = useState(null);\n  const [liquidity, setLiquidity] = useState(null);\n  const [unclaimedRoundsLiq, setUnclaimedRoundsLiq] = useState([]);\n  const [winningRecords, setWinningRecords] = useState([]);\n  const [selectedWinningRecord, setSelectedWinningRecord] = useState(null);\n\n  const [timer, setTimer] = useState({\n    days: \"-\",\n    hours: \"-\",\n    mins: \"-\",\n  });\n  let [wallet, setWallet] = useState({ secretjs: null, address: null });\n\n  async function setupKeplrfun() {\n    const { secretjs, address } = await setupKeplr();\n    setWallet({ secretjs, address });\n  }\n\n  useEffect(() => {\n    if (wallet.secretjs == null || wallet.address == null) {\n      setupKeplrfun();\n    }\n\n    if (wallet.secretjs != null || wallet.address != null) {\n      if (!isPermit) {\n        checkPermit();\n      }\n      if (timer.days === \"-\") {\n        fetchTimer();\n        fetchLotteryInfo();\n      }\n    }\n  }, [wallet]);\n\n  useEffect(() => {\n    if (isPermit) {\n      fetchDelegated();\n      fetchUnbondings();\n      fetchWithdrawable();\n      fetchLiquidity();\n      fetchUserWinningRecords();\n    }\n  }, [isPermit]);\n\n  async function checkPermit() {\n    const { secretjs, address } = wallet;\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = localStorage.getItem(permitName);\n\n    if (permit != null) {\n      setisPermit(true);\n    }\n  }\n\n  async function setPermit() {\n    const { secretjs, address } = wallet;\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    const allowedTokens = [contract_address];\n    const permissions = [\"owner\"];\n    const chainId = process.env.REACT_APP_SECRET_CHAIN_ID;\n\n    let permit = await secretjs.utils.accessControl.permit.sign(\n      address,\n      chainId,\n      permitName,\n      allowedTokens,\n      permissions,\n      true\n    );\n    localStorage.setItem(permitName, JSON.stringify(permit));\n\n    setisPermit(true);\n  }\n\n  async function fetchDelegated() {\n    const { secretjs, address } = wallet;\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    // now fetch the balance here lol\n    let delegated = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            delegated: {},\n          },\n        },\n      },\n    });\n\n    if (delegated.amount != null) {\n      const balance = delegated.amount;\n      setDelegated(balance);\n    } else {\n      setDelegated(0);\n    }\n  }\n\n  async function fetchUnbondings() {\n    const { secretjs, address } = wallet;\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    // now fetch the balance here lol\n    let unbondings = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            unbondings: {},\n          },\n        },\n      },\n    });\n\n    const now = new Date();\n\n    if (unbondings.len != 0) {\n      for (let i = 0; i < unbondings.vec.length; i++) {\n        if (unbondings.vec[i].next_batch_unbonding_time != null) {\n          let date = new Date(\n            unbondings.vec[i].next_batch_unbonding_time * 1000\n          );\n          unbondings.vec[i].next_batch_unbonding_time = `${date\n            .toISOString()\n            .slice(0, 19)\n            .replace(\"T\", \" \")} UTC`;\n        }\n        if (unbondings.vec[i].unbonding_time != null) {\n          if (now / 1000 >= unbondings.vec[i].unbonding_time) {\n            unbondings.vec[i].isClaimable = true;\n          } else {\n            unbondings.vec[i].isClaimable = false;\n          }\n          let date = new Date(unbondings.vec[i].unbonding_time * 1000);\n          unbondings.vec[i].unbonding_time = `${date\n            .toISOString()\n            .slice(0, 19)\n            .replace(\"T\", \" \")} UTC`;\n        }\n      }\n      setUnbondings(unbondings.vec);\n    } else {\n      setUnbondings([]);\n    }\n  }\n\n  async function fetchLiquidity() {\n    const { secretjs, address } = wallet;\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    let user_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            user_info: {},\n          },\n        },\n      },\n    });\n\n    setuserInfo(user_info);\n\n    let start;\n    let end;\n    let lottery_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        round: {},\n      },\n    });\n    setLotteryInfo(lottery_info);\n\n    let current_liquidity = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            liquidity: { round_index: lottery_info.current_round_index },\n          },\n        },\n      },\n    });\n\n    setLiquidity(current_liquidity);\n\n    if (user_info.last_claim_rewards_round) {\n      start = user_info.last_claim_rewards_round + 1;\n    } else {\n      if (user_info.starting_round) {\n        start = user_info.starting_round;\n      } else {\n        start = lottery_info.current_round_index;\n      }\n    }\n\n    end = lottery_info.current_round_index;\n\n    let unclaimed_round_info = [];\n    for (let i = start; i < end; i++) {\n      let liquidity = await secretjs.query.compute.queryContract({\n        contractAddress: contract_address,\n        codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n        query: {\n          with_permit: {\n            permit,\n            query: {\n              liquidity: { round_index: i },\n            },\n          },\n        },\n      });\n\n      liquidity.round_index = i;\n      let date_now = parseInt(new Date() / 1000);\n\n      liquidity.is_reward_expired =\n        liquidity.expiry_date < date_now ? true : false;\n\n      unclaimed_round_info.push(liquidity);\n    }\n\n    // let unclaimed_round = [];\n\n    // for (let i = 0; i < 20; i++) {\n    //   unclaimed_round.push({ round_index: i });\n    // }\n\n    setUnclaimedRoundsLiq(unclaimed_round_info);\n  }\n\n  async function fetchUserStats() {\n    const { secretjs, address } = wallet;\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    let user_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            user_info: {},\n          },\n        },\n      },\n    });\n\n    setuserInfo(user_info);\n    let lottery_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        round: {},\n      },\n    });\n\n    let current_liquidity = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            liquidity: { round_index: lottery_info.current_round_index },\n          },\n        },\n      },\n    });\n    setLiquidity(current_liquidity);\n  }\n  async function fetchWithdrawable() {\n    const { secretjs, address } = wallet;\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    // now fetch the balance here lol\n    let withdrawable = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            withdrawable: {},\n          },\n        },\n      },\n    });\n\n    setWithdrawable(withdrawable.amount);\n  }\n\n  async function fetchLotteryInfo() {\n    const { secretjs, address } = wallet;\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    // now fetch the balance here lol\n    let lottery_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        round: {},\n      },\n    });\n\n    setLotteryInfo(lottery_info);\n  }\n\n  async function fetchUserWinningRecords() {\n    const { secretjs, address } = wallet;\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    let permitName = `Query_Permit_${contract_address}_${address}`;\n\n    let permit = JSON.parse(localStorage.getItem(permitName));\n\n    // now fetch the balance here lol\n    let records = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        with_permit: {\n          permit,\n          query: {\n            records: {},\n          },\n        },\n      },\n    });\n\n    //fetching last 10 records only\n    let page_number;\n    let page_size = 5;\n    if (records.len > page_size) {\n      let extra = records.len % page_size;\n      let start_page = parseInt(records.len / page_size) - 1;\n      let end_page;\n      if (extra > 0) {\n        end_page = start_page + 1;\n      } else {\n        end_page = start_page;\n      }\n\n      let result_vec = [];\n      for (let i = start_page; i <= end_page; i++) {\n        let rec = await secretjs.query.compute.queryContract({\n          contractAddress: contract_address,\n          codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n          query: {\n            with_permit: {\n              permit,\n              query: {\n                records: { start_page: i, page_size },\n              },\n            },\n          },\n        });\n        result_vec = result_vec.concat(rec.vec);\n        setWinningRecords(result_vec.reverse());\n      }\n\n      // setWinningRecords(result_vec.reverse());\n    } else {\n      setWinningRecords(records.vec.reverse());\n    }\n  }\n\n  async function claim_rewards() {\n    const { secretjs, address } = wallet;\n\n    let contractAddress = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n    let codeHash = process.env.REACT_APP_POOL_CONTRACT_HASH;\n\n    // let gasLimit =\n\n    try {\n      const tx = await secretjs.tx.compute.executeContract(\n        {\n          sender: address,\n          contractAddress: contractAddress,\n          codeHash: codeHash, // optional but way faster\n          msg: {\n            claim_rewards: {},\n          },\n        },\n        {\n          gasLimit: 4240297,\n        }\n      );\n\n      if (tx.jsonLog) {\n        Notifications(\n          \"success\",\n          \"Transaction sent!\",\n          `Successfully claim rewards\n        Txhash: ${tx.transactionHash}`\n        );\n      } else {\n        Notifications(\"error\", \"ERROR\", tx.rawLog);\n      }\n    } catch (e) {\n      Notifications(\"error\", \"ERROR\", e);\n    }\n\n    await claimRewardsCallback();\n  }\n\n  async function fetchTimer() {\n    const { secretjs, address } = wallet;\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    // now fetch the balance here lol\n    let lottery_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        round: {},\n      },\n    });\n\n    setLotteryInfo(lottery_info);\n\n    let date_now = parseInt(new Date() / 1000);\n\n    if (date_now < lottery_info.end_time) {\n      let date_future = lottery_info.end_time;\n      // get total seconds between the times\n      var delta = Math.abs(date_future - date_now);\n\n      // calculate (and subtract) whole days\n      var days = Math.floor(delta / 86400);\n      delta -= days * 86400;\n\n      // calculate (and subtract) whole hours\n      var hours = Math.floor(delta / 3600) % 24;\n      delta -= hours * 3600;\n\n      // calculate (and subtract) whole minutes\n      var minutes = Math.floor(delta / 60) % 60;\n      delta -= minutes * 60;\n\n      // what's left is seconds\n      // var seconds = delta % 60;\n\n      let timer = { days: days, hours: hours, mins: minutes };\n\n      setTimer(timer);\n    } else {\n      let timer = { days: 0, hours: 0, mins: 0 };\n\n      setTimer(timer);\n    }\n    setTimeout(() => {\n      fetchTimer();\n    }, 60 * 1000);\n  }\n\n  async function depositCallback() {\n    await fetchDelegated();\n    await fetchUserStats();\n  }\n\n  async function unbondingCallback() {\n    await fetchDelegated();\n    await fetchUnbondings();\n  }\n\n  async function withdrawCallback() {\n    await fetchWithdrawable();\n    await fetchUnbondings();\n  }\n\n  async function claimRewardsCallback() {\n    await fetchLiquidity();\n    await fetchUserWinningRecords();\n  }\n\n  function winningRecordsCallback(record) {\n    winningRecordsToggle();\n    setSelectedWinningRecord(record);\n  }\n\n  const [pageTable1, setPageTable1] = useState(1);\n  const [pageTable2, setPageTable2] = useState(1);\n  const [pageTable3, setPageTable3] = useState(1);\n\n  // pagination setup\n  const resultsPerPage = 5;\n\n  // setup data for every table\n  const [dataTable1, setDataTable1] = useState([]);\n  const [dataTable2, setDataTable2] = useState([]);\n  const [dataTable3, setDataTable3] = useState([]);\n\n  // pagination change control\n  function onPageChangeTable1(p) {\n    setPageTable1(p);\n  }\n\n  // pagination change control\n  function onPageChangeTable2(p) {\n    setPageTable2(p);\n  }\n\n  function onPageChangeTable3(p) {\n    setPageTable3(p);\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    setDataTable1(\n      unclaimedRoundsLiq.slice(\n        (pageTable1 - 1) * resultsPerPage,\n        pageTable1 * resultsPerPage\n      )\n    );\n  }, [pageTable1, unclaimedRoundsLiq]);\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    setDataTable2(\n      winningRecords.slice(\n        (pageTable2 - 1) * resultsPerPage,\n        pageTable2 * resultsPerPage\n      )\n    );\n  }, [pageTable2, winningRecords]);\n\n  useEffect(() => {\n    setDataTable3(\n      unbondings.slice(\n        (pageTable3 - 1) * resultsPerPage,\n        pageTable3 * resultsPerPage\n      )\n    );\n  }, [pageTable3, unbondings]);\n\n  return (\n    <div>\n      <div className=\" grid grid-cols-7 mt-4 grid-parent \">\n        <div\n          className=\"col-span-2 p-4 account_deposit_card mr-1\"\n          style={{ background: \"linear-gradient(to right,#9A47B9, #4D2D9F)\" }}\n        >\n          <div className=\"flex flex-row  account_deposit_title\">Deposits</div>\n          {!isPermit ? (\n            <div\n              className=\"flex flex-row p-3 items-center justify-start\"\n              style={{ cursor: \"pointer\" }}\n              onClick={setPermit}\n            >\n              <span style={{ fontSize: \"20px\" }}>&#128269;</span>\n\n              <span className=\"createViewingKey p-4\">\n                CREATE VIEWING PERMIT\n              </span>\n            </div>\n          ) : (\n            <div>\n              {\" \"}\n              {delegated == null ? (\n                <div>Loading...</div>\n              ) : (\n                <div className=\"flex flex-row justify-start items-end\">\n                  <span className=\"account_deposit_amount mr-1\">\n                    {(delegated / 1e6).toFixed(2)}\n                    <span className=\"account_deposit_denom  \">SCRT</span>\n                  </span>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"col-span-5 bg-primary2 account_deposit_card  gap-4 p-4\">\n          <div className=\"flex flex-row h-full w-full justify-between \">\n            <div className=\"flex flex-row items-center justify-center \">\n              <span className=\" align-self-center d-flex justify-content-end\">\n                <img\n                  src={logo}\n                  alt=\"LOGO Image\"\n                  className=\"img-fluid logo-size\"\n                />\n              </span>\n\n              <span className=\" ml-4 \">\n                <div className=\"account_token_title\">SCRT</div>\n              </span>\n            </div>\n\n            <div className=\"flex flex-col w-full items-end justify-between \">\n              <div>\n                <div className=\"flex flex-row items-center justify-start \">\n                  <span className=\"\">\n                    <img\n                      src={gift}\n                      alt=\"LOGO Image\"\n                      className=\"img-fluid logo-size\"\n                    />\n                  </span>\n\n                  <span className=\" ml-4 \">\n                    <div className=\"account_time_font\">\n                      in {timer.days}d ,{timer.hours}h ,{timer.mins}m{\" \"}\n                    </div>\n                  </span>\n                </div>\n              </div>\n              <div className=\"flex flex-row w-full items-center justify-center\">\n                <div className=\"btn account_reduce_stakes_withdraw_button   m-1 self-center\">\n                  <Button\n                    className=\"btn account_reduce_stakes_withdraw_button  self-center\"\n                    onClick={claim_rewards}\n                  >\n                    Claim Rewards\n                  </Button>\n                </div>\n                <div className=\"btn account_reduce_stakes_withdraw_button   m-1\">\n                  <Button\n                    className=\"btn account_reduce_stakes_withdraw_button  self-center\"\n                    disabled={\n                      withdrawable == null || withdrawable == 0 ? true : false\n                    }\n                    onClick={withdrawToggle}\n                  >\n                    Withdraw\n                  </Button>\n                  <WithdrawableModal\n                    isShowing={isWithdrawModalShowing}\n                    hide={withdrawToggle}\n                    callback={withdrawCallback}\n                    withdrawable={withdrawable}\n                    type={\"user\"}\n                  />\n                </div>\n                <div className=\"btn account_reduce_stakes_withdraw_button   m-1\">\n                  <Button\n                    className=\"btn account_reduce_stakes_withdraw_button  self-center\"\n                    onClick={unbondToggle}\n                    disabled={\n                      delegated == null || delegated == 0 ? true : false\n                    }\n                  >\n                    Unbond\n                  </Button>\n                  <UnbondingModal\n                    isShowing={isUnbondModalShowing}\n                    hide={unbondToggle}\n                    callback={unbondingCallback}\n                    delegated={delegated}\n                    type={\"user\"}\n                  />\n                </div>\n                <div className=\"btn account_reduce_stakes_withdraw_button   m-1\">\n                  <Button\n                    className=\"btn account_deposit_button  self-center\"\n                    onClick={depositToggle}\n                  >\n                    Deposit\n                  </Button>\n                  <DepositModal\n                    isShowing={isDepositModalShowing}\n                    hide={depositToggle}\n                    callback={depositCallback}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"flex flex-col mt-6 p-6 bg-primary2 text-white account_deposit_card\">\n        <div className=\" text-2xl \">User Stats</div>\n        <div className=\" border\"></div>\n\n        <TableContainer>\n          <Table>\n            <TableBody>\n              <TableRow className=\"bg-primary2\">\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"font-semibold ml-2\">\n                      Amount Withdrawable\n                    </span>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm justify-self-end\">\n                    {(withdrawable / 1e6).toFixed(2)} SCRT\n                  </span>\n                </TableCell>\n              </TableRow>\n              <TableRow className=\"bg-primary2\">\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"font-semibold ml-2\">Ticket Price</span>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm justify-self-end\">\n                    {lotteryInfo\n                      ? (lotteryInfo.ticket_price / 1e6).toFixed(2)\n                      : 0}{\" \"}\n                    SCRT\n                  </span>\n                </TableCell>\n              </TableRow>\n              <TableRow className=\"bg-primary2\">\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"font-semibold ml-2\">\n                      User Tickets / Total Tickets\n                    </span>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm justify-self-end\">\n                    {liquidity ? liquidity.user_tickets : 0} /{\" \"}\n                    {liquidity ? liquidity.total_tickets : 0} {\" (\"}\n                    {liquidity\n                      ? (\n                          ((liquidity.user_tickets\n                            ? liquidity.user_tickets\n                            : 0) /\n                            (liquidity.total_tickets != 0\n                              ? liquidity.total_tickets\n                              : 1)) *\n                          100\n                        ).toFixed(2)\n                      : 0}\n                    %{\") \"}\n                  </span>\n                </TableCell>\n              </TableRow>\n              <TableRow className=\"bg-primary2\">\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"font-semibold ml-2\">\n                      Last round claimed\n                    </span>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm justify-self-end\">\n                    {userInfo\n                      ? userInfo.last_claim_rewards_round\n                        ? userInfo.last_claim_rewards_round\n                        : \"-\"\n                      : 0}\n                  </span>\n                </TableCell>\n              </TableRow>\n              <TableRow className=\"bg-primary2\">\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"font-semibold ml-2\">Current Round</span>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm justify-self-end\">\n                    {lotteryInfo ? lotteryInfo.current_round_index : 0}\n                  </span>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n\n      <div className=\"flex flex-col mt-6 p-6 bg-primary2 text-white account_deposit_card\">\n        <div className=\" text-2xl \">User Liquidity</div>\n        <div className=\" border\"></div>\n        <div className=\"flex flex-row justify-between\">\n          <TableContainer>\n            <Table>\n              <TableHeader>\n                <TableRow className=\"bg-primary2 items-center justify-center text-white\">\n                  <TableCell>Round</TableCell>\n                  <TableCell>Total Tickets</TableCell>\n                  <TableCell>Tickets Used</TableCell>\n                  <TableCell>Rewards Expired ?</TableCell>\n                  <TableCell>Total Rewards</TableCell>\n                  <TableCell>Unclaimed Rewards</TableCell>\n                </TableRow>\n              </TableHeader>\n              {unclaimedRoundsLiq ? (\n                <TableBody>\n                  {dataTable1.map((value, index) => {\n                    return (\n                      <TableRow key={index} className=\"bg-primary2\">\n                        <TableCell>\n                          <span className=\"text-sm\">{value.round_index}</span>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {value.user_tickets}\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {value.tickets_used}\n                            </span>\n                          </div>\n                        </TableCell>\n\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            {value.is_reward_expired ? (\n                              <Badge type=\"success\">Yes</Badge>\n                            ) : (\n                              <Badge type=\"danger\">NO</Badge>\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {(value.total_rewards / 1e6).toFixed(6)} SCRT\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {(value.unclaimed_rewards / 1e6).toFixed(6)} SCRT\n                            </span>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              ) : (\n                <TableBody></TableBody>\n              )}\n            </Table>\n            <TableFooter>\n              <Pagination\n                totalResults={unclaimedRoundsLiq.length}\n                resultsPerPage={5}\n                onChange={onPageChangeTable1}\n                label=\"Table navigation\"\n              />\n            </TableFooter>\n          </TableContainer>\n        </div>\n      </div>\n\n      <div className=\"flex flex-col mt-6 p-6 bg-primary2 text-white account_deposit_card\">\n        <div className=\" text-2xl \">Unbondings</div>\n        <div className=\" border\"></div>\n        <div className=\"flex flex-row justify-between\">\n          <TableContainer>\n            <Table>\n              <TableHeader>\n                <TableRow className=\"bg-primary2 items-center justify-center text-white\">\n                  <TableCell>Amount</TableCell>\n                  <TableCell>Unbonding Batch Index</TableCell>\n                  <TableCell>Claimable ?</TableCell>\n                  <TableCell>Batch Unbond Time</TableCell>\n                  <TableCell>Unbonding Time</TableCell>\n                </TableRow>\n              </TableHeader>\n              {unbondings ? (\n                <TableBody>\n                  {unbondings.map((value, index) => {\n                    return (\n                      <TableRow key={index} className=\"bg-primary2\">\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(value.amount / 1e6).toFixed(2)} SCRT\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {value.batch_index}\n                            </span>\n                          </div>\n                        </TableCell>\n\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            {value.isClaimable ? (\n                              <Badge type=\"success\">Yes</Badge>\n                            ) : (\n                              <Badge type=\"danger\">NO</Badge>\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {value.next_batch_unbonding_time\n                                ? value.next_batch_unbonding_time\n                                : \"Already Unbonded\"}\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center text-sm\">\n                            <span className=\"font-semibold ml-2\">\n                              {value.unbonding_time\n                                ? value.unbonding_time\n                                : \"-\"}\n                            </span>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              ) : (\n                <TableBody></TableBody>\n              )}\n            </Table>\n            <TableFooter>\n              <Pagination\n                totalResults={unbondings.length}\n                resultsPerPage={5}\n                onChange={onPageChangeTable2}\n                label=\"Table navigation\"\n              />\n            </TableFooter>\n          </TableContainer>\n        </div>\n      </div>\n      <div className=\"flex flex-col mt-6 p-6 bg-primary2 text-white account_deposit_card\">\n        <div className=\" text-2xl \">User Winnings</div>\n        <div className=\" border\"></div>\n        <div className=\"flex flex-row justify-between\">\n          <TableContainer>\n            <Table>\n              <TableHeader>\n                <TableRow className=\"bg-primary2 items-center justify-center text-white\">\n                  <TableCell>Round</TableCell>\n                  <TableCell>Total Winnings</TableCell>\n                  <TableCell>Tikcets</TableCell>\n                  <TableCell>Ticket Price</TableCell>\n                  <TableCell>Details</TableCell>\n                </TableRow>\n              </TableHeader>\n              {winningRecords ? (\n                <TableBody>\n                  {dataTable2.map((value, index) => {\n                    return (\n                      <TableRow key={index} className=\"bg-primary2\">\n                        <TableCell>\n                          <span className=\"text-sm\">{value.round}</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(value.total_amount_won / 1e6).toFixed(2)} SCRT\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{value.tickets}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {(value.ticket_price / 1e6).toFixed(2)} SCRT\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <Button\n                            className=\"btn account_reduce_stakes_withdraw_button  self-center\"\n                            onClick={() =>\n                              winningRecordsCallback(value.rewards_per_tier)\n                            }\n                          >\n                            Details\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {isWinningRecordsShowing ? (\n                    <WinningRecordModal\n                      isShowing={isWinningRecordsShowing}\n                      hide={winningRecordsToggle}\n                      rewardsPerTier={selectedWinningRecord}\n                    />\n                  ) : null}\n                </TableBody>\n              ) : (\n                <TableBody></TableBody>\n              )}\n            </Table>\n            <TableFooter>\n              <Pagination\n                totalResults={winningRecords ? winningRecords.length : 0}\n                resultsPerPage={5}\n                onChange={onPageChangeTable2}\n                label=\"Table navigation\"\n              />\n            </TableFooter>\n          </TableContainer>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserView;\n","import React, { useState } from \"react\";\n\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport UserView from \"./UserView\";\nfunction UserPoolDetails(props) {\n  const [value, setValue] = useState(0);\n\n  return (\n    <div>\n      <div>\n        <button\n          onClick={(event) => props.setViewStatus(null)}\n          className=\"text-white hover:text-gray-400\"\n        >\n          Go Back\n        </button>\n\n        <div className=\"Panel\">\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n            <UserView />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserPoolDetails;\n","import React, { useState, useEffect } from \"react\";\n\nimport PoolCard from \"../components/Cards/PoolCard\";\nimport RoundIcon from \"../components/RoundIcon\";\nimport { MoneyIcon } from \"../icons\";\nimport UserPoolDetails from \"./UserPoolDetails\";\nimport { setupKeplr } from \"../components/CryptoComponents/client\";\n\nfunction UserPools() {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     pool_id: null,\n  //     timer: {\n  //       days: \"-\",\n  //       hours: \"-\",\n  //       mins: \"-\",\n  //     },\n  //     wallet: { secretjs: null, address: null },\n  //   };\n  //   this.setViewStatus = this.setViewStatus.bind(this);\n  // }\n  // setViewStatus = (param) => {\n  //   this.setState({ pool_id: param });\n  // };\n  const [timer, setTimer] = useState({\n    day1: 0,\n    day2: 0,\n    hour1: 0,\n    hour2: 0,\n    min1: 0,\n    min2: 0,\n    sec1: 0,\n    sec2: 0,\n  });\n  let [wallet, setWallet] = useState({ secretjs: null, address: null });\n  let [poolId, setPoolId] = useState(null);\n  let [lotteryInfo, setLotteryInfo] = useState(null);\n\n  async function setupKeplrfun() {\n    const { secretjs, address } = await setupKeplr();\n    setWallet({ secretjs, address });\n  }\n\n  async function fetchTimer() {\n    const { secretjs, address } = wallet;\n\n    let contract_address = process.env.REACT_APP_POOL_CONTRACT_ADDRESS;\n\n    // now fetch the balance here lol\n    let lottery_info = await secretjs.query.compute.queryContract({\n      contractAddress: contract_address,\n      codeHash: process.env.REACT_APP_POOL_CONTRACT_HASH, // optional but way faster\n      query: {\n        round: {},\n      },\n    });\n\n    // lottery_info.end_time = parseInt(new Date() / 1000) + 590;\n\n    setLotteryInfo(lottery_info);\n  }\n  useEffect(() => {\n    if (wallet.secretjs == null || wallet.address == null) {\n      setupKeplrfun();\n    }\n\n    if (wallet.secretjs != null || wallet.address != null) {\n      fetchTimer();\n    }\n  }, [wallet]);\n  return (\n    <div>\n      {!poolId ? (\n        <div\n          className=\"grid gap-6 mt-8 mb-8 md:grid-cols-1 xl:grid-cols-1\"\n          onClick={() => setPoolId(\"scrt\")}\n        >\n          <PoolCard\n            title=\"Approximate Prize\"\n            value=\"$50,000\"\n            setViewStatus={setPoolId}\n            end_time={lotteryInfo ? lotteryInfo.end_time : Date.now() / 1000}\n            duration={lotteryInfo ? lotteryInfo.duration : 0}\n          >\n            <RoundIcon\n              icon={MoneyIcon}\n              iconColorClass=\"text-blue-500 dark:text-blue-100\"\n              bgColorClass=\"bg-purple-100 dark:bg-purple-500\"\n              className=\"mr-4\"\n            />\n          </PoolCard>\n        </div>\n      ) : (\n        <div>\n          <UserPoolDetails setViewStatus={setPoolId} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UserPools;\n","import { SecretNetworkClient } from \"secretjs\";\nimport * as dotenv from \"dotenv\"; // see https://github.com/motdotla/dotenv#how-do-i-use-dotenv-with-import\ndotenv.config({ path: \"../../../.env\" });\n\nexport async function setupKeplr() {\n  const sleep = (number) =>\n    new Promise((resolve) => setTimeout(resolve, number));\n  const SECRET_REST_API = process.env.REACT_APP_SECRET_REST_URL;\n\n  const SECRET_CHAIN_ID = process.env.REACT_APP_SECRET_CHAIN_ID;\n\n  while (\n    !window.keplr ||\n    !window.getEnigmaUtils ||\n    !window.getOfflineSignerOnlyAmino\n  ) {\n    await sleep(50);\n  }\n\n  await window.keplr.enable(SECRET_CHAIN_ID);\n  const keplrOfflineSigner =\n    window.keplr.getOfflineSignerOnlyAmino(SECRET_CHAIN_ID);\n\n  const [{ address: myAddress }] = await keplrOfflineSigner.getAccounts();\n\n  const grpcWebUrl = SECRET_REST_API;\n\n  const secretjs = await SecretNetworkClient.create({\n    grpcWebUrl,\n    chainId: SECRET_CHAIN_ID,\n    wallet: keplrOfflineSigner,\n    walletAddress: myAddress,\n    encryptionUtils: window.keplr.getEnigmaUtils(SECRET_CHAIN_ID),\n  });\n\n  let obj = {\n    address: myAddress,\n    secretjs,\n  };\n\n  return obj;\n}\n","module.exports = __webpack_public_path__ + \"static/media/scrt_logo.0fe47b33.png\";","import Swal from \"sweetalert2\";\n\nvar toastMixin = Swal.mixin({\n  toast: true,\n  icon: \"success\",\n  title: \"General Title\",\n  position: \"top-right\",\n  showConfirmButton: false,\n  timer: 15000,\n  timerProgressBar: true,\n  showCloseButton: true,\n  didOpen: (toast) => {\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n  },\n});\n\nexport default async function Notifications(type, title, message) {\n  let themeColor = \"#136762\";\n  let fontColor = \"#ffffff\";\n\n  toastMixin.fire({\n    title: title,\n    text: message,\n    icon: type,\n    color: fontColor,\n    background: themeColor,\n  });\n}\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon ({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className\n}) {\n  const baseStyle = 'p-3 rounded-full'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className='w-5 h-5' />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","import { useState } from \"react\";\n\nconst useModal = () => {\n  const [isShowing, setIsShowing] = useState(false);\n\n  function toggle() {\n    setIsShowing(!isShowing);\n    // console.log(\"CLICKED\");\n  }\n\n  return {\n    isShowing,\n    toggle,\n  };\n};\n\nexport default useModal;\n","module.exports = __webpack_public_path__ + \"static/media/gift.d2784fb5.png\";"],"sourceRoot":""}